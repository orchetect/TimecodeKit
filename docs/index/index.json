{"includedArchiveIdentifiers":["timecodekit.TimecodeKit"],"interfaceLanguages":{"swift":[{"children":[{"title":"Welcome","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/getting-started","title":"Getting Started","type":"article"},{"path":"\/documentation\/timecodekit\/timecodekit-2-migration-guide","title":"TimecodeKit 2 Migration Guide","type":"article"},{"title":"Timecode","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"children":[{"path":"\/documentation\/timecodekit\/timecode\/init(_:using:)-91fix","title":"init(TimecodeSourceValue, using: Properties) throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:using:by:)-62c6g","title":"init(TimecodeSourceValue, using: Properties, by: ValidationRule)","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:at:base:limit:)-5c83i","title":"init(TimecodeSourceValue, at: TimecodeFrameRate, base: SubFramesBase, limit: UpperLimit) throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:at:base:limit:by:)-7ini4","title":"init(TimecodeSourceValue, at: TimecodeFrameRate, base: SubFramesBase, limit: UpperLimit, by: ValidationRule)","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:using:)-9kys1","title":"init(AsyncTimecodeSourceValue, using: Properties) async throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:using:by:)-53ut6","title":"init(AsyncTimecodeSourceValue, using: Properties, by: ValidationRule) async","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:at:base:limit:)-9pgu2","title":"init(AsyncTimecodeSourceValue, at: TimecodeFrameRate, base: SubFramesBase, limit: UpperLimit) async throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:at:base:limit:by:)-46rcd","title":"init(AsyncTimecodeSourceValue, at: TimecodeFrameRate, base: SubFramesBase, limit: UpperLimit, by: ValidationRule) async","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:)-3i5yx","title":"init(RichTimecodeSourceValue) throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:)-7kx8w","title":"init(AsyncRichTimecodeSourceValue) async throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:using:)-41kgh","title":"init(FormattedTimecodeSourceValue, using: Properties) throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:using:by:)-vi3i","title":"init(FormattedTimecodeSourceValue, using: Properties, by: ValidationRule) throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:at:base:limit:)-w372","title":"init(FormattedTimecodeSourceValue, at: TimecodeFrameRate, base: SubFramesBase, limit: UpperLimit) throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:at:base:limit:by:)-1mmhx","title":"init(FormattedTimecodeSourceValue, at: TimecodeFrameRate, base: SubFramesBase, limit: UpperLimit, by: ValidationRule) throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:using:)-7lle2","title":"init(GuaranteedTimecodeSourceValue, using: Properties)","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:at:base:limit:)-6c3tu","title":"init(GuaranteedTimecodeSourceValue, at: TimecodeFrameRate, base: SubFramesBase, limit: UpperLimit)","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(_:)-6vdaz","title":"init(GuaranteedRichTimecodeSourceValue)","type":"init"}],"path":"\/documentation\/timecodekit\/timecode-constructors","title":"Constructors","type":"symbol"},{"title":"Components","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/init(d:h:m:s:f:sf:)","title":"init(d: Int, h: Int, m: Int, s: Int, f: Int, sf: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/days","title":"var days: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/hours","title":"var hours: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/minutes","title":"var minutes: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/seconds","title":"var seconds: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/subframes","title":"var subFrames: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/invalidcomponents(at:base:limit:)","title":"func invalidComponents(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/invalidcomponents(using:)","title":"func invalidComponents(using: Timecode.Properties) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/validrange(of:at:base:limit:)","title":"func validRange(of: Timecode.Component, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> ClosedRange<Int>","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/validrange(of:using:)","title":"func validRange(of: Timecode.Component, using: Timecode.Properties) -> ClosedRange<Int>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/zero","title":"static let zero: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/id-6oj5v","title":"var id: `Self`","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/id-esf2","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct","title":"Timecode.Components","type":"struct"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.property","title":"var components: Components","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/days","title":"var days: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/hours","title":"var hours: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/minutes","title":"var minutes: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/seconds","title":"var seconds: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/subframes","title":"var subFrames: Int","type":"property"},{"title":"Properties","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/init(rate:base:limit:)","title":"init(rate: TimecodeFrameRate, base: SubFramesBase, limit: UpperLimit)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/framerate","title":"var frameRate: TimecodeFrameRate","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/subframesbase","title":"var subFramesBase: SubFramesBase","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/upperlimit","title":"var upperLimit: UpperLimit","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct","title":"Timecode.Properties","type":"struct"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.property","title":"var properties: Properties","type":"property"},{"title":"Frame Rate","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framerate","title":"var frameRate: TimecodeFrameRate","type":"property"},{"title":"Subframes Base","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/max100subframes","title":"case max100SubFrames","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/max80subframes","title":"case max80SubFrames","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/quarterframes","title":"case quarterFrames","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/convert(subframes:to:)","title":"func convert(subFrames: Int, to: `Self`) -> Int","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/default()","title":"static func `default`() -> Timecode.SubFramesBase","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/id-58ahb","title":"var id: `Self`","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/id-6mrmq","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.enum","title":"Timecode.SubFramesBase","type":"enum"},{"path":"\/documentation\/timecodekit\/timecode\/subframesbase-swift.property","title":"var subFramesBase: SubFramesBase","type":"property"},{"title":"Upper Limit","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/max100days","title":"case max100Days","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/max24hours","title":"case max24Hours","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/id-39vf6","title":"var id: `Self`","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/id-7op4d","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum","title":"Timecode.UpperLimit","type":"enum"},{"path":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.property","title":"var upperLimit: UpperLimit","type":"property"},{"title":"Frame Count","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/*(_:_:)","title":"static func * (`Self`, Double) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/+(_:_:)","title":"static func + (`Self`, `Self`) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/-(_:_:)","title":"static func - (`Self`, `Self`) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/_(_:_:)-3wywy","title":"static func \/ (`Self`, Double) -> Timecode.FrameCount","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/init(_:base:)","title":"init(Value, base: SubFramesBase)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/decimalvalue","title":"var decimalValue: Decimal","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/doublevalue","title":"var doubleValue: Double","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/iszero","title":"var isZero: Bool","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/subframes","title":"var subFrames: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/subframesbase","title":"let subFramesBase: SubFramesBase","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.property","title":"var value: Value","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/wholeframes","title":"var wholeFrames: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/adding(_:)","title":"func adding(`Self`) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/dividing(by:)","title":"func dividing(by: Double) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/multiplying(by:)","title":"func multiplying(by: Double) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/subtracting(_:)","title":"func subtracting(`Self`) -> Timecode.FrameCount","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/combined(frames:)","title":"case combined(frames: Double)","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/frames(_:)","title":"case frames(Int)","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/split(frames:subframes:)","title":"case split(frames: Int, subFrames: Int)","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/splitunitinterval(frames:subframesunitinterval:)","title":"case splitUnitInterval(frames: Int, subFramesUnitInterval: Double)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/id-3qkga","title":"var id: `Self`","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/id-7rwaa","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/value-swift.enum","title":"Timecode.FrameCount.Value","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/'...(_:)-99vn3","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/'...(_:)-tl76","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/_(_:_:)-21k75","title":"static func > (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/_(_:_:)-6zfr9","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/_(_:_:)-9h0wy","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/_=(_:_:)-1hukx","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/_=(_:_:)-5h95v","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/id-4ew4o","title":"var id: ObjectIdentifier","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/id-6vatr","title":"var id: `Self`","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.struct","title":"Timecode.FrameCount","type":"struct"},{"path":"\/documentation\/timecodekit\/timecode\/framecount-swift.property","title":"var frameCount: FrameCount","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/maxframecountexpressible","title":"var maxFrameCountExpressible: FrameCount","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/maxsubframesexpressible","title":"var maxSubFramesExpressible: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/maxsubframecountexpressible","title":"var maxSubFrameCountExpressible: Int","type":"property"},{"title":"Timecode String","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/stringformat","title":"Timecode.StringFormat","type":"typealias"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/stringformatoption\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/timecodekit\/timecode\/stringformatoption\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/stringformatoption\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/timecodekit\/timecode\/stringformatoption\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/stringformatoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/stringformatoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/stringformatoption\/id","title":"var id: `Self`","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/stringformatoption\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/stringformatoption","title":"Timecode.StringFormatOption","type":"enum"},{"path":"\/documentation\/timecodekit\/timecode\/stringvalue(format:)","title":"func stringValue(format: StringFormat) -> String","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/stringvaluevalidated(format:invalidattributes:defaultattributes:)","title":"func stringValueValidated(format: StringFormat, invalidAttributes: [NSAttributedString.Key : Any]?, defaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString","type":"method"},{"title":"Conversion","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/converted(to:base:preservingvalues:)","title":"func converted(to: TimecodeFrameRate, base: Timecode.SubFramesBase?, preservingValues: Bool) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/cmtimevalue","title":"var cmTimeValue: CMTime","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/feetandframesvalue","title":"var feetAndFramesValue: FeetAndFrames","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/rationalvalue","title":"var rationalValue: Fraction","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/realtimevalue","title":"var realTimeValue: TimeInterval","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/samplesvalue(samplerate:)","title":"func samplesValue(sampleRate: Int) -> Int","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/samplesdoublevalue(samplerate:)","title":"func samplesDoubleValue(sampleRate: Int) -> Double","type":"method"},{"title":"Setting Timecode","type":"groupMarker"},{"children":[{"path":"\/documentation\/timecodekit\/timecode\/set(_:)-5y7su","title":"func set(TimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/set(_:by:)-92yoi","title":"func set(TimecodeSourceValue, by: ValidationRule)","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/set(_:)-7b9qg","title":"func set(AsyncTimecodeSourceValue) async throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/set(_:by:)-8glzs","title":"func set(AsyncTimecodeSourceValue, by: ValidationRule) async","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/set(_:)-2rc5m","title":"func set(RichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/set(_:)-4y2bh","title":"func set(AsyncRichTimecodeSourceValue) async throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/set(_:)-22ndo","title":"func set(FormattedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/set(_:by:)-1goc0","title":"func set(FormattedTimecodeSourceValue, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/set(_:)-3p8ei","title":"func set(GuaranteedTimecodeSourceValue)","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/set(_:)-89p8h","title":"func set(GuaranteedRichTimecodeSourceValue) -> Properties","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/setting(_:)-3akbp","title":"func setting(TimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/setting(_:by:)-42wj3","title":"func setting(TimecodeSourceValue, by: ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/setting(_:)-2qd7a","title":"func setting(AsyncTimecodeSourceValue) async throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/setting(_:by:)-4oa78","title":"func setting(AsyncTimecodeSourceValue, by: ValidationRule) async -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/setting(_:)-1dhd5","title":"func setting(RichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/setting(_:)-2d9ti","title":"func setting(AsyncRichTimecodeSourceValue) async throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/setting(_:)-95f3c","title":"func setting(FormattedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/setting(_:by:)-2fpos","title":"func setting(FormattedTimecodeSourceValue, by: ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/setting(_:)-81hub","title":"func setting(GuaranteedTimecodeSourceValue) -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/setting(_:)-5q0hp","title":"func setting(GuaranteedRichTimecodeSourceValue) -> Timecode","type":"method"}],"path":"\/documentation\/timecodekit\/timecode-set","title":"Setting Timecode","type":"symbol"},{"title":"Math","type":"groupMarker"},{"children":[{"title":"Addition","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:)-9m8xq","title":"func add(Timecode) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:by:)-42lw","title":"func add(Timecode, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:)-88aua","title":"func add(Components) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:by:)-4lww7","title":"func add(Components, by: ValidationRule)","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:)-857gw","title":"func add(TimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:by:)-1yniv","title":"func add(TimecodeSourceValue, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:)-14tde","title":"func add(RichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:by:)-2njan","title":"func add(RichTimecodeSourceValue, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:)-71xxo","title":"func add(FormattedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:by:)-14dcw","title":"func add(FormattedTimecodeSourceValue, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:)-3240f","title":"func add(GuaranteedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:by:)-4nkq8","title":"func add(GuaranteedTimecodeSourceValue, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:)-55w29","title":"func add(GuaranteedRichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/add(_:by:)-6fwhs","title":"func add(GuaranteedRichTimecodeSourceValue, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:)-904hr","title":"func adding(Timecode) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:by:)-8pf7p","title":"func adding(Timecode, by: ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:)-5bv1","title":"func adding(Components) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:by:)-7fcyg","title":"func adding(Components, by: ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:)-1o83k","title":"func adding(TimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:by:)-74tzs","title":"func adding(TimecodeSourceValue, by: ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:)-z5j7","title":"func adding(RichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:by:)-6awjq","title":"func adding(RichTimecodeSourceValue, by: ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:)-qlqv","title":"func adding(FormattedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:by:)-19lr1","title":"func adding(FormattedTimecodeSourceValue, by: ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:)-7b8yj","title":"func adding(GuaranteedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:by:)-9o39d","title":"func adding(GuaranteedTimecodeSourceValue, by: ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:)-8rxca","title":"func adding(GuaranteedRichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/adding(_:by:)-91bfw","title":"func adding(GuaranteedRichTimecodeSourceValue, by: ValidationRule) throws -> Timecode","type":"method"},{"title":"Subtraction","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:)-5gp46","title":"func subtract(Timecode) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:by:)-4l96x","title":"func subtract(Timecode, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:)-7furw","title":"func subtract(Components) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:by:)-9n8ue","title":"func subtract(Components, by: ValidationRule)","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:)-9oxpu","title":"func subtract(TimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:by:)-508dt","title":"func subtract(TimecodeSourceValue, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:)-ocmj","title":"func subtract(RichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:by:)-3onj2","title":"func subtract(RichTimecodeSourceValue, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:)-1rf5l","title":"func subtract(FormattedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:by:)-857ne","title":"func subtract(FormattedTimecodeSourceValue, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:)-9js9a","title":"func subtract(GuaranteedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:by:)-33g0h","title":"func subtract(GuaranteedTimecodeSourceValue, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:)-3j57f","title":"func subtract(GuaranteedRichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtract(_:by:)-8cjf8","title":"func subtract(GuaranteedRichTimecodeSourceValue, by: ValidationRule) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:)-9gs31","title":"func subtracting(Timecode) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:by:)-4i08g","title":"func subtracting(Timecode, by: ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:)-4k13k","title":"func subtracting(Components) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:by:)-17ava","title":"func subtracting(Components, by: ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:)-3ovst","title":"func subtracting(TimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:by:)-p5la","title":"func subtracting(TimecodeSourceValue, by: ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:)-49fu","title":"func subtracting(RichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:by:)-2gt9c","title":"func subtracting(RichTimecodeSourceValue, by: ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:)-1o05d","title":"func subtracting(FormattedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:by:)-42lpp","title":"func subtracting(FormattedTimecodeSourceValue, by: ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:)-8mzxx","title":"func subtracting(GuaranteedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:by:)-92c0s","title":"func subtracting(GuaranteedTimecodeSourceValue, by: ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:)-29zr6","title":"func subtracting(GuaranteedRichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/subtracting(_:by:)-3pd2x","title":"func subtracting(GuaranteedRichTimecodeSourceValue, by: ValidationRule) throws -> Timecode","type":"method"},{"title":"Multiplication","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/multiply(_:)","title":"func multiply(Double) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/multiply(_:by:)","title":"func multiply(Double, by: ValidationRule)","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/multiplying(_:)","title":"func multiplying(Double) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/multiplying(_:by:)","title":"func multiplying(Double, by: ValidationRule) -> Timecode","type":"method"},{"title":"Division","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/divide(_:)","title":"func divide(Double) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/divide(_:by:)","title":"func divide(Double, by: ValidationRule)","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/dividing(_:)-9pfge","title":"func dividing(Timecode) throws -> Double","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/dividing(_:)-96rdz","title":"func dividing(Components) throws -> Double","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/dividing(_:)-4bgmz","title":"func dividing(Double) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/dividing(_:by:)","title":"func dividing(Double, by: ValidationRule) -> Timecode","type":"method"}],"path":"\/documentation\/timecodekit\/timecode-math","title":"Math","type":"symbol"},{"path":"\/documentation\/timecodekit\/timecode\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Rounding","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/clampcomponents()","title":"func clampComponents()","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/roundup(tonearest:)","title":"func roundUp(toNearest: Timecode.Component) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/roundedup(tonearest:)","title":"func roundedUp(toNearest: Timecode.Component) throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/rounddown(tonearest:)","title":"func roundDown(toNearest: Component)","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/roundeddown(tonearest:)","title":"func roundedDown(toNearest: Component) -> Timecode","type":"method"},{"title":"Comparison","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/compare(to:timelinestart:)","title":"func compare(to: Timecode, timelineStart: Timecode?) -> ComparisonResult","type":"method"},{"title":"Intervals","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/asinterval(_:)","title":"func asInterval(FloatingPointSign) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/interval(to:)","title":"func interval(to: Timecode) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/offset(by:)","title":"func offset(by: TimecodeInterval)","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/offsetting(by:)","title":"func offsetting(by: TimecodeInterval) -> Timecode","type":"method"},{"title":"Validation","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/validationrule\/allowinginvalid","title":"case allowingInvalid","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/validationrule\/clamping","title":"case clamping","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/validationrule\/clampingcomponents","title":"case clampingComponents","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/validationrule\/wrapping","title":"case wrapping","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/validationrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/validationrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/validationrule","title":"Timecode.ValidationRule","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/validationerror\/outofbounds","title":"case outOfBounds","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/validationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/validationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/validationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/validationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/validationerror","title":"Timecode.ValidationError","type":"enum"},{"path":"\/documentation\/timecodekit\/timecode\/invalidcomponents","title":"var invalidComponents: Set<Component>","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/stringvaluevalidated(format:invalidattributes:defaultattributes:)","title":"func stringValueValidated(format: StringFormat, invalidAttributes: [NSAttributedString.Key : Any]?, defaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/component\/days","title":"case days","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/component\/frames","title":"case frames","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/component\/hours","title":"case hours","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/component\/minutes","title":"case minutes","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/component\/seconds","title":"case seconds","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/component\/subframes","title":"case subFrames","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/component\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/component\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/component\/id-1fntf","title":"var id: `Self`","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/component\/id-4an8","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/component\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/component","title":"Timecode.Component","type":"enum"},{"path":"\/documentation\/timecodekit\/timecode\/validrange(of:)","title":"func validRange(of: Component) -> ClosedRange<Int>","type":"method"},{"title":"Transformer","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/transform(using:)","title":"func transform(using: TimecodeTransformer)","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/transformed(using:)","title":"func transformed(using: TimecodeTransformer) -> Timecode","type":"method"},{"title":"Formatter","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/init(using:stringformat:showsvalidation:validationattributes:)-14zf4","title":"init(using: Timecode, stringFormat: StringFormat?, showsValidation: Bool, validationAttributes: [NSAttributedString.Key : Any]?)","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/init(using:stringformat:showsvalidation:validationattributes:)-2uon2","title":"init(using: Timecode.Properties?, stringFormat: StringFormat?, showsValidation: Bool, validationAttributes: [NSAttributedString.Key : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/alignment","title":"var alignment: NSTextAlignment","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/framerate","title":"var frameRate: TimecodeFrameRate?","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/showsvalidation","title":"var showsValidation: Bool","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/stringformat","title":"var stringFormat: Timecode.StringFormat","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/subframesbase","title":"var subFramesBase: SubFramesBase?","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/timecodeproperties","title":"var timecodeProperties: Timecode.Properties?","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/upperlimit","title":"var upperLimit: Timecode.UpperLimit?","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/validationattributes","title":"var validationAttributes: [NSAttributedString.Key : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/attributedstring(for:withdefaultattributes:)","title":"func attributedString(for: Any, withDefaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString?","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/getobjectvalue(_:for:errordescription:)","title":"func getObjectValue(AutoreleasingUnsafeMutablePointer<AnyObject?>?, for: String, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/inheritproperties(from:)","title":"func inheritProperties(from: Timecode.TextFormatter)","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/ispartialstringvalid(_:proposedselectedrange:originalstring:originalselectedrange:errordescription:)","title":"func isPartialStringValid(AutoreleasingUnsafeMutablePointer<NSString>, proposedSelectedRange: NSRangePointer?, originalString: String, originalSelectedRange: NSRange, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/string(for:)","title":"func string(for: Any?) -> String?","type":"method"}],"path":"\/documentation\/timecodekit\/timecode\/textformatter","title":"Timecode.TextFormatter","type":"class"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/stringparseerror\/malformed","title":"case malformed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/stringparseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/stringparseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/stringparseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/stringparseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/stringparseerror","title":"Timecode.StringParseError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/mediaparseerror\/internalerror","title":"case internalError","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/mediaparseerror\/missingornonstandardframerate","title":"case missingOrNonStandardFrameRate","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/mediaparseerror\/nodata","title":"case noData","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/mediaparseerror\/unknowntimecode","title":"case unknownTimecode","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/mediaparseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/mediaparseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/mediaparseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/mediaparseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/mediaparseerror","title":"Timecode.MediaParseError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/mediawriteerror\/internalerror","title":"case internalError","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/mediawriteerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/mediawriteerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/mediawriteerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/mediawriteerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/mediawriteerror","title":"Timecode.MediaWriteError","type":"enum"},{"title":"Internals","type":"groupMarker"},{"children":[{"title":"Utilities","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components(of:at:)","title":"static func components(of: FrameCount, at: TimecodeFrameRate) -> Components","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/framecount(of:at:base:)","title":"static func frameCount(of: Components, at: TimecodeFrameRate, base: SubFramesBase) -> FrameCount","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/invalidcomponents(in:using:)","title":"static func invalidComponents(in: Components, using: Timecode.Properties) -> Set<Component>","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/invalidcomponents(in:at:base:limit:)","title":"static func invalidComponents(in: Components, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> Set<Component>","type":"method"},{"title":"AVFoundation Utilities","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/cmformatdescription(extensions:)","title":"func cmFormatDescription(extensions: CMFormatDescription.Extensions?) throws -> CMTimeCodeFormatDescription","type":"method"}],"path":"\/documentation\/timecodekit\/timecode-internals","title":"Timecode Internals","type":"symbol"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/*(_:_:)-2408u","title":"static func * (`Self`, Double) -> Timecode","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/*(_:_:)-31yyg","title":"static func * <T>(`Self`, T) -> Timecode","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/*=(_:_:)-8a2na","title":"static func *= (inout `Self`, Double)","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/*=(_:_:)-9nsob","title":"static func *= <T>(inout `Self`, T)","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/+(_:)","title":"static func + (`Self`) -> TimecodeInterval","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/+(_:_:)","title":"static func + (`Self`, `Self`) -> Timecode","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/+=(_:_:)","title":"static func += (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/-(_:)","title":"static func - (`Self`) -> TimecodeInterval","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/-(_:_:)","title":"static func - (`Self`, `Self`) -> Timecode","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/-=(_:_:)","title":"static func -= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/_(_:_:)-323qu","title":"static func \/ (`Self`, `Self`) -> Double","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/_(_:_:)-563ih","title":"static func \/ <T>(`Self`, T) -> Timecode","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/_(_:_:)-5s440","title":"static func \/ (`Self`, Double) -> Timecode","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/_=(_:_:)-3n4p4","title":"static func \/= <T>(inout `Self`, T)","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/_=(_:_:)-hpkf","title":"static func \/= (inout `Self`, Double)","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/verbosedescription","title":"var verboseDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/'...(_:)-4oa40","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/'...(_:)-9ilrc","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/_(_:_:)-9emui","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/_(_:_:)-9wjp4","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/_(_:_:)-l1q2","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/_=(_:_:)-68szz","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/_=(_:_:)-9myg4","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/timecodekit\/timecode\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/timecodekit\/timecode\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/==(_:_:)-2mxw7","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/timecode\/==(_:_:)-91sym","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/timecodekit\/timecode\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/id-5s1p1","title":"var id: ObjectIdentifier","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/id-p6xw","title":"var id: `Self`","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/advanced(by:)","title":"func advanced(by: Stride) -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/distance(to:)","title":"func distance(to: `Self`) -> Stride","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/stride","title":"Timecode.Stride","type":"typealias"}],"path":"\/documentation\/timecodekit\/timecode\/strideable-implementations","title":"Strideable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/transferrepresentation","title":"static var transferRepresentation: some TransferRepresentation","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/transferable-implementations","title":"Transferable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode","title":"Timecode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/init(rate:base:limit:)","title":"init(rate: TimecodeFrameRate, base: SubFramesBase, limit: UpperLimit)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/framerate","title":"var frameRate: TimecodeFrameRate","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/subframesbase","title":"var subFramesBase: SubFramesBase","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/upperlimit","title":"var upperLimit: UpperLimit","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/properties-swift.struct","title":"Timecode.Properties","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/init(d:h:m:s:f:sf:)","title":"init(d: Int, h: Int, m: Int, s: Int, f: Int, sf: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/days","title":"var days: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/hours","title":"var hours: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/minutes","title":"var minutes: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/seconds","title":"var seconds: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/subframes","title":"var subFrames: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/invalidcomponents(at:base:limit:)","title":"func invalidComponents(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/invalidcomponents(using:)","title":"func invalidComponents(using: Timecode.Properties) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/validrange(of:at:base:limit:)","title":"func validRange(of: Timecode.Component, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> ClosedRange<Int>","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/validrange(of:using:)","title":"func validRange(of: Timecode.Component, using: Timecode.Properties) -> ClosedRange<Int>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/zero","title":"static let zero: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/id-6oj5v","title":"var id: `Self`","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/id-esf2","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecode\/components-swift.struct","title":"Timecode.Components","type":"struct"},{"children":[{"path":"\/documentation\/timecodekit\/timecode\/stringvalue(format:)","title":"func stringValue(format: StringFormat) -> String","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/stringvaluevalidated(format:invalidattributes:defaultattributes:)","title":"func stringValueValidated(format: StringFormat, invalidAttributes: [NSAttributedString.Key : Any]?, defaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString","type":"method"},{"title":"StringFormat Options","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/stringformatoption\/showsubframes","title":"case showSubFrames","type":"case"},{"path":"\/documentation\/timecodekit\/timecode\/stringformatoption\/filenamecompatible","title":"case filenameCompatible","type":"case"},{"title":"StringFormat Static Constructors","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/swift\/set\/default()","title":"static func `default`() -> Set<Element>","type":"method"},{"path":"\/documentation\/timecodekit\/swift\/set\/showsubframes-swift.type.property","title":"static let showSubFrames: `Self`","type":"property"},{"title":"StringFormat Extensions","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/swift\/set\/showsubframes-swift.property","title":"var showSubFrames: Bool","type":"property"},{"path":"\/documentation\/timecodekit\/swift\/set\/filenamecompatible","title":"var filenameCompatible: Bool","type":"property"}],"path":"\/documentation\/timecodekit\/timecode-string","title":"Display String","type":"symbol"},{"children":[{"title":"Instance Comparison","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/compare(to:timelinestart:)","title":"func compare(to: Timecode, timelineStart: Timecode?) -> ComparisonResult","type":"method"},{"title":"Collection Sorting","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/swift\/collection\/issorted(ascending:timelinestart:)","title":"func isSorted(ascending: Bool, timelineStart: Timecode?) -> Bool","type":"method"},{"path":"\/documentation\/timecodekit\/swift\/mutablecollection\/sort(ascending:timelinestart:)","title":"func sort(ascending: Bool, timelineStart: Timecode)","type":"method"},{"path":"\/documentation\/timecodekit\/swift\/collection\/sorted()","title":"func sorted() -> [Element]","type":"method"},{"path":"\/documentation\/timecodekit\/swift\/collection\/sorted(ascending:timelinestart:)","title":"func sorted(ascending: Bool, timelineStart: Timecode) -> [Element]","type":"method"},{"title":"SortComparator","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodesortcomparator\/init(order:timelinestart:)","title":"init(order: SortOrder, timelineStart: Timecode?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodesortcomparator\/order","title":"var order: SortOrder","type":"property"},{"path":"\/documentation\/timecodekit\/timecodesortcomparator\/timelinestart","title":"var timelineStart: Timecode?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodesortcomparator\/compare(_:_:)","title":"func compare(Timecode, Timecode) -> ComparisonResult","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodesortcomparator\/compared","title":"TimecodeSortComparator.Compared","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodesortcomparator\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecodesortcomparator\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecodesortcomparator","title":"TimecodeSortComparator","type":"struct"}],"path":"\/documentation\/timecodekit\/timecode-comparison-and-sort","title":"Comparison & Sort","type":"symbol"},{"children":[{"title":"CMTimeRange Extensions","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/coremedia\/cmtimerange\/timecoderange(at:base:limit:)","title":"func timecodeRange(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> ClosedRange<Timecode>","type":"method"},{"path":"\/documentation\/timecodekit\/coremedia\/cmtimerange\/timecoderange(using:)","title":"func timecodeRange(using: Timecode.Properties) throws -> ClosedRange<Timecode>","type":"method"}],"path":"\/documentation\/timecodekit\/timecode-range-and-strideable","title":"Range & Strideable","type":"symbol"},{"children":[{"title":"Invalid Components","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/invalidcomponents","title":"var invalidComponents: Set<Component>","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/invalidcomponents(in:at:base:limit:)","title":"static func invalidComponents(in: Components, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> Set<Component>","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/invalidcomponents(in:using:)","title":"static func invalidComponents(in: Components, using: Timecode.Properties) -> Set<Component>","type":"method"},{"title":"Formatted Attributed String","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/stringvaluevalidated(format:invalidattributes:defaultattributes:)","title":"func stringValueValidated(format: StringFormat, invalidAttributes: [NSAttributedString.Key : Any]?, defaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString","type":"method"},{"title":"Formatter","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/init(using:stringformat:showsvalidation:validationattributes:)-14zf4","title":"init(using: Timecode, stringFormat: StringFormat?, showsValidation: Bool, validationAttributes: [NSAttributedString.Key : Any]?)","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/init(using:stringformat:showsvalidation:validationattributes:)-2uon2","title":"init(using: Timecode.Properties?, stringFormat: StringFormat?, showsValidation: Bool, validationAttributes: [NSAttributedString.Key : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/alignment","title":"var alignment: NSTextAlignment","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/framerate","title":"var frameRate: TimecodeFrameRate?","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/showsvalidation","title":"var showsValidation: Bool","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/stringformat","title":"var stringFormat: Timecode.StringFormat","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/subframesbase","title":"var subFramesBase: SubFramesBase?","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/timecodeproperties","title":"var timecodeProperties: Timecode.Properties?","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/upperlimit","title":"var upperLimit: Timecode.UpperLimit?","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/validationattributes","title":"var validationAttributes: [NSAttributedString.Key : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/attributedstring(for:withdefaultattributes:)","title":"func attributedString(for: Any, withDefaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString?","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/getobjectvalue(_:for:errordescription:)","title":"func getObjectValue(AutoreleasingUnsafeMutablePointer<AnyObject?>?, for: String, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/inheritproperties(from:)","title":"func inheritProperties(from: Timecode.TextFormatter)","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/ispartialstringvalid(_:proposedselectedrange:originalstring:originalselectedrange:errordescription:)","title":"func isPartialStringValid(AutoreleasingUnsafeMutablePointer<NSString>, proposedSelectedRange: NSRangePointer?, originalString: String, originalSelectedRange: NSRange, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"},{"path":"\/documentation\/timecodekit\/timecode\/textformatter\/string(for:)","title":"func string(for: Any?) -> String?","type":"method"}],"path":"\/documentation\/timecodekit\/timecode\/textformatter","title":"Timecode.TextFormatter","type":"class"}],"path":"\/documentation\/timecodekit\/timecode-validation","title":"Validation","type":"symbol"},{"title":"Frame Rate","type":"groupMarker"},{"children":[{"title":"Rates","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps23_976","title":"case fps23_976","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps24","title":"case fps24","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps24_98","title":"case fps24_98","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps25","title":"case fps25","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps29_97","title":"case fps29_97","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps29_97d","title":"case fps29_97d","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps30","title":"case fps30","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps30d","title":"case fps30d","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps47_952","title":"case fps47_952","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps48","title":"case fps48","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps50","title":"case fps50","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps59_94","title":"case fps59_94","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps59_94d","title":"case fps59_94d","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps60","title":"case fps60","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps60d","title":"case fps60d","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps95_904","title":"case fps95_904","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps96","title":"case fps96","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps100","title":"case fps100","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps119_88","title":"case fps119_88","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps119_88d","title":"case fps119_88d","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps120","title":"case fps120","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fps120d","title":"case fps120d","type":"case"},{"title":"String Extensions","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/swift\/string\/timecodeframerate","title":"var timecodeFrameRate: TimecodeFrameRate?","type":"property"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/init(frameduration:drop:)-57qbd","title":"init?(frameDuration: CMTime, drop: Bool)","type":"init"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/init(frameduration:drop:)-5r5jx","title":"init?(frameDuration: Fraction, drop: Bool)","type":"init"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/init(rate:drop:)-1l2o5","title":"init?(rate: Fraction, drop: Bool)","type":"init"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/init(rate:drop:)-3vf3a","title":"init?(rate: CMTime, drop: Bool)","type":"init"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/aafmetadata","title":"var aafMetadata: (editRate: String, dropFrame: String, framesPerSecond: String)","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.property","title":"var compatibleGroup: CompatibleGroup","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegrouprates","title":"var compatibleGroupRates: [`Self`]","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/fcpxmlmetadata","title":"var fcpXMLMetadata: (frameDuration: String, tcFormat: String)","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/isdrop","title":"var isDrop: Bool","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/maxframenumberdisplayable","title":"var maxFrameNumberDisplayable: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/stringvalueverbose","title":"var stringValueVerbose: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/iscompatible(with:)","title":"func isCompatible(with: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/maxsubframecountexpressible(in:base:)","title":"func maxSubFrameCountExpressible(in: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> Int","type":"method"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/maxtotalframes(in:)","title":"func maxTotalFrames(in: Timecode.UpperLimit) -> Int","type":"method"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/maxtotalframesexpressible(in:)","title":"func maxTotalFramesExpressible(in: Timecode.UpperLimit) -> Int","type":"method"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/maxtotalsubframes(in:base:)","title":"func maxTotalSubFrames(in: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> Int","type":"method"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/videoframerate(interlaced:)","title":"func videoFrameRate(interlaced: Bool) -> VideoFrameRate?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/alldrop","title":"static let allDrop: [`Self`]","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/allnondrop","title":"static let allNonDrop: [`Self`]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.enum\/ntsccolor","title":"case ntscColor","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.enum\/ntsccolorwalltime","title":"case ntscColorWallTime","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.enum\/ntscdrop","title":"case ntscDrop","type":"case"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.enum\/whole","title":"case whole","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.enum\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.enum\/table","title":"static var table: [CompatibleGroup : [TimecodeFrameRate]]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.enum","title":"TimecodeFrameRate.CompatibleGroup","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecodeframerate\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecodeframerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/alternateframeduration","title":"var alternateFrameDuration: Fraction?","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/frameduration","title":"var frameDuration: Fraction","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/framedurationcmtime","title":"var frameDurationCMTime: CMTime","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/rate","title":"var rate: Fraction","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/ratecmtime","title":"var rateCMTime: CMTime","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecodeframerate\/framerateprotocol-implementations","title":"FrameRateProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/id-54g9h","title":"var id: ObjectIdentifier","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/id-7lqxc","title":"var id: `Self`","type":"property"}],"path":"\/documentation\/timecodekit\/timecodeframerate\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/timecodekit\/timecodeframerate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/timecodekit\/timecodeframerate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecodeframerate","title":"TimecodeFrameRate","type":"enum"},{"children":[{"title":"Rates","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps23_98p","title":"case fps23_98p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps24p","title":"case fps24p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps25p","title":"case fps25p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps25i","title":"case fps25i","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps29_97p","title":"case fps29_97p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps29_97i","title":"case fps29_97i","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps30p","title":"case fps30p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps47_95p","title":"case fps47_95p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps48p","title":"case fps48p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps50p","title":"case fps50p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps50i","title":"case fps50i","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps59_94p","title":"case fps59_94p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps59_94i","title":"case fps59_94i","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps60p","title":"case fps60p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps60i","title":"case fps60i","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps95_9p","title":"case fps95_9p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps96p","title":"case fps96p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps100p","title":"case fps100p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps119_88p","title":"case fps119_88p","type":"case"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps120p","title":"case fps120p","type":"case"},{"title":"String Extensions","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/swift\/string\/videoframerate","title":"var videoFrameRate: VideoFrameRate?","type":"property"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/videoframerate\/init(asset:)","title":"init(asset: AVAsset) async throws","type":"init"},{"path":"\/documentation\/timecodekit\/videoframerate\/init(fps:interlaced:strict:)-22g3w","title":"init?(fps: Float, interlaced: Bool, strict: Bool)","type":"init"},{"path":"\/documentation\/timecodekit\/videoframerate\/init(fps:interlaced:strict:)-6nlpc","title":"init?(fps: Double, interlaced: Bool, strict: Bool)","type":"init"},{"path":"\/documentation\/timecodekit\/videoframerate\/init(frameduration:interlaced:)-2u2tt","title":"init?(frameDuration: Fraction, interlaced: Bool)","type":"init"},{"path":"\/documentation\/timecodekit\/videoframerate\/init(frameduration:interlaced:)-5nhrn","title":"init?(frameDuration: CMTime, interlaced: Bool)","type":"init"},{"path":"\/documentation\/timecodekit\/videoframerate\/init(rate:interlaced:)-1aago","title":"init?(rate: CMTime, interlaced: Bool)","type":"init"},{"path":"\/documentation\/timecodekit\/videoframerate\/init(rate:interlaced:)-6g3q9","title":"init?(rate: Fraction, interlaced: Bool)","type":"init"},{"path":"\/documentation\/timecodekit\/videoframerate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/videoframerate\/fps","title":"var fps: Double","type":"property"},{"path":"\/documentation\/timecodekit\/videoframerate\/isinterlaced","title":"var isInterlaced: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/videoframerate\/timecodeframerate(drop:)","title":"func timecodeFrameRate(drop: Bool) -> TimecodeFrameRate?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/videoframerate\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/timecodekit\/videoframerate\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/videoframerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/videoframerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/videoframerate\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/videoframerate\/alternateframeduration","title":"var alternateFrameDuration: Fraction?","type":"property"},{"path":"\/documentation\/timecodekit\/videoframerate\/frameduration","title":"var frameDuration: Fraction","type":"property"},{"path":"\/documentation\/timecodekit\/videoframerate\/framedurationcmtime","title":"var frameDurationCMTime: CMTime","type":"property"},{"path":"\/documentation\/timecodekit\/videoframerate\/rate","title":"var rate: Fraction","type":"property"},{"path":"\/documentation\/timecodekit\/videoframerate\/ratecmtime","title":"var rateCMTime: CMTime","type":"property"},{"path":"\/documentation\/timecodekit\/videoframerate\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/timecodekit\/videoframerate\/framerateprotocol-implementations","title":"FrameRateProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/videoframerate\/id-8i2z3","title":"var id: ObjectIdentifier","type":"property"},{"path":"\/documentation\/timecodekit\/videoframerate\/id-8xkyb","title":"var id: `Self`","type":"property"}],"path":"\/documentation\/timecodekit\/videoframerate\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/videoframerate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/videoframerate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/videoframerate\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/timecodekit\/videoframerate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/timecodekit\/videoframerate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/videoframerate","title":"VideoFrameRate","type":"enum"},{"title":"Math & Conversions","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/math","title":"Math","type":"article"},{"path":"\/documentation\/timecodekit\/timecode-conversions","title":"Conversions","type":"article"},{"children":[{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/fraction\/*(_:_:)","title":"static func * (`Self`, `Self`) -> Fraction","type":"op"},{"path":"\/documentation\/timecodekit\/fraction\/+(_:_:)","title":"static func + (`Self`, `Self`) -> Fraction","type":"op"},{"path":"\/documentation\/timecodekit\/fraction\/-(_:_:)","title":"static func - (`Self`, `Self`) -> Fraction","type":"op"},{"path":"\/documentation\/timecodekit\/fraction\/_(_:_:)-57r2l","title":"static func \/ (`Self`, `Self`) -> Fraction","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/fraction\/init(_:)","title":"init(CMTime)","type":"init"},{"path":"\/documentation\/timecodekit\/fraction\/init(_:_:)","title":"init(Int, Int)","type":"init"},{"path":"\/documentation\/timecodekit\/fraction\/init(double:decimalprecision:)","title":"init(double: Double, decimalPrecision: Int)","type":"init"},{"path":"\/documentation\/timecodekit\/fraction\/init(fcpxmlstring:)","title":"init?(fcpxmlString: String)","type":"init"},{"path":"\/documentation\/timecodekit\/fraction\/init(reducing:_:)","title":"init(reducing: Int, Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/fraction\/cmtimevalue","title":"var cmTimeValue: CMTime","type":"property"},{"path":"\/documentation\/timecodekit\/fraction\/decimalvalue","title":"var decimalValue: Decimal","type":"property"},{"path":"\/documentation\/timecodekit\/fraction\/denominator","title":"let denominator: Int","type":"property"},{"path":"\/documentation\/timecodekit\/fraction\/doublevalue","title":"var doubleValue: Double","type":"property"},{"path":"\/documentation\/timecodekit\/fraction\/fcpxmlstringvalue","title":"var fcpxmlStringValue: String","type":"property"},{"path":"\/documentation\/timecodekit\/fraction\/floatvalue","title":"var floatValue: Float","type":"property"},{"path":"\/documentation\/timecodekit\/fraction\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/timecodekit\/fraction\/isreduced","title":"var isReduced: Bool","type":"property"},{"path":"\/documentation\/timecodekit\/fraction\/iswholeinteger","title":"var isWholeInteger: Bool","type":"property"},{"path":"\/documentation\/timecodekit\/fraction\/numerator","title":"let numerator: Int","type":"property"},{"path":"\/documentation\/timecodekit\/fraction\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/fraction\/abs()","title":"func abs() -> Fraction","type":"method"},{"path":"\/documentation\/timecodekit\/fraction\/isequal(to:)","title":"func isEqual(to: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/timecodekit\/fraction\/isidentical(to:)","title":"func isIdentical(to: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/timecodekit\/fraction\/negate()","title":"func negate()","type":"method"},{"path":"\/documentation\/timecodekit\/fraction\/negated()","title":"func negated() -> Fraction","type":"method"},{"path":"\/documentation\/timecodekit\/fraction\/reduced()","title":"func reduced() -> Fraction","type":"method"},{"path":"\/documentation\/timecodekit\/fraction\/timecodeinterval(at:base:limit:)","title":"func timecodeInterval(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> TimecodeInterval","type":"method"},{"path":"\/documentation\/timecodekit\/fraction\/timecodeinterval(using:)","title":"func timecodeInterval(using: Timecode.Properties) throws -> TimecodeInterval","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/fraction\/zero","title":"static let zero: Fraction","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/fraction\/'...(_:)-2gltq","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/fraction\/'...(_:)-8fyrw","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/fraction\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/fraction\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/fraction\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/timecodekit\/fraction\/_(_:_:)-2i9kt","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/fraction\/_(_:_:)-5pyzg","title":"static func < (Fraction, Fraction) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/fraction\/_=(_:_:)-95mmi","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/fraction\/_=(_:_:)-9erul","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/fraction\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/fraction\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/timecodekit\/fraction\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/fraction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/timecodekit\/fraction\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/fraction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/fraction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/timecodekit\/fraction\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/fraction\/id-4hhyl","title":"var id: String","type":"property"},{"path":"\/documentation\/timecodekit\/fraction\/id-4jk5n","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/timecodekit\/fraction\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/fraction","title":"Fraction","type":"struct"},{"title":"CMTime Extensions","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/coremedia\/cmtime\/init(_:)","title":"init(Fraction)","type":"init"},{"path":"\/documentation\/timecodekit\/coremedia\/cmtime\/fractionvalue","title":"var fractionValue: Fraction","type":"property"}],"path":"\/documentation\/timecodekit\/rational-numbers-and-cmtime","title":"Rational Numbers & CMTime","type":"symbol"},{"children":[{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/init(_:_:)","title":"init(Timecode, FloatingPointSign)","type":"init"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/init(_:at:base:limit:)-9q4rx","title":"init(CMTime, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/init(_:at:base:limit:)-9qp4j","title":"init(Fraction, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/init(_:using:)-44vat","title":"init(CMTime, using: Timecode.Properties) throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/init(_:using:)-62nk","title":"init(Fraction, using: Timecode.Properties) throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/init(realtime:at:base:limit:)","title":"init(realTime: TimeInterval, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/init(realtime:using:)","title":"init(realTime: TimeInterval, using: Timecode.Properties) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/absoluteinterval","title":"let absoluteInterval: Timecode","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/cmtimevalue","title":"var cmTimeValue: CMTime","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/rationalvalue","title":"var rationalValue: Fraction","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/realtimevalue","title":"var realTimeValue: TimeInterval","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/sign","title":"let sign: FloatingPointSign","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/verbosedescription","title":"var verboseDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/flattened()","title":"func flattened() -> Timecode","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/negative(_:)","title":"static func negative(Timecode) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/positive(_:)","title":"static func positive(Timecode) -> TimecodeInterval","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecodeinterval\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/timecodekit\/timecodeinterval\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/timecodeinterval\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/id-4zl2k","title":"var id: ObjectIdentifier","type":"property"},{"path":"\/documentation\/timecodekit\/timecodeinterval\/id-5wbwu","title":"var id: `Self`","type":"property"}],"path":"\/documentation\/timecodekit\/timecodeinterval\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/timecodeinterval","title":"TimecodeInterval","type":"struct"},{"title":"CMTime Extensions","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/coremedia\/cmtime\/timecodeinterval(at:base:limit:)","title":"func timecodeInterval(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> TimecodeInterval","type":"method"},{"path":"\/documentation\/timecodekit\/coremedia\/cmtime\/timecodeinterval(using:)","title":"func timecodeInterval(using: Timecode.Properties) throws -> TimecodeInterval","type":"method"},{"title":"Double Extensions","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/swift\/double\/timecodeinterval(at:base:limit:)","title":"func timecodeInterval(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> TimecodeInterval","type":"method"},{"path":"\/documentation\/timecodekit\/swift\/double\/timecodeinterval(using:)","title":"func timecodeInterval(using: Timecode.Properties) throws -> TimecodeInterval","type":"method"}],"path":"\/documentation\/timecodekit\/timecode-interval","title":"Timecode Interval","type":"symbol"},{"children":[{"path":"\/documentation\/timecodekit\/timecodetransformer","title":"TimecodeTransformer","type":"struct"}],"path":"\/documentation\/timecodekit\/timecode-transformer","title":"Timecode Transformer","type":"symbol"},{"title":"Encoding","type":"groupMarker"},{"children":[{"title":"NSItemProvider","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/init(from:propertiesfortimecodestring:)-34ph6","title":"init(from: NSItemProvider, propertiesForTimecodeString: Timecode.Properties) async throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/init(from:propertiesfortimecodestring:)-7fhcr","title":"init(from: [NSItemProvider], propertiesForTimecodeString: Timecode.Properties) async throws","type":"init"},{"path":"\/documentation\/timecodekit\/timecode\/itemproviders(stringformat:)","title":"func itemProviders(stringFormat: StringFormat) -> [NSItemProvider]","type":"method"},{"title":"Transferable","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecode\/transferrepresentation","title":"static var transferRepresentation: some TransferRepresentation","type":"property"},{"title":"UT Types","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/uniformtypeidentifiers\/uttype\/timecode","title":"static let timecode: UTType","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/textuttype","title":"static let textUTType: UTType","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/copyuttypes","title":"static let copyUTTypes: [UTType]","type":"property"},{"path":"\/documentation\/timecodekit\/timecode\/pasteuttypes","title":"static let pasteUTTypes: [UTType]","type":"property"}],"path":"\/documentation\/timecodekit\/timecode-encoding","title":"Encoding","type":"symbol"},{"title":"Formats","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/ltc-linear-timecode","title":"LTC (Linear Timecode)","type":"article"},{"path":"\/documentation\/timecodekit\/mtc-midi-timecode","title":"MTC (MIDI Timecode)","type":"article"},{"children":[{"title":"AVAsset Extensions","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/avfoundation\/avasset\/starttimecode(at:base:limit:)","title":"func startTimecode(at: TimecodeFrameRate?, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) async throws -> Timecode?","type":"method"},{"path":"\/documentation\/timecodekit\/avfoundation\/avasset\/durationtimecode(at:base:limit:)","title":"func durationTimecode(at: TimecodeFrameRate?, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) async throws -> Timecode","type":"method"},{"path":"\/documentation\/timecodekit\/avfoundation\/avasset\/endtimecode(at:base:limit:)","title":"func endTimecode(at: TimecodeFrameRate?, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) async throws -> Timecode?","type":"method"},{"path":"\/documentation\/timecodekit\/avfoundation\/avasset\/timecodes(at:base:limit:)","title":"func timecodes(at: TimecodeFrameRate?, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) async throws -> [[Timecode]]","type":"method"},{"path":"\/documentation\/timecodekit\/avfoundation\/avasset\/timecodeframerate(drop:)","title":"func timecodeFrameRate(drop: Bool?) async throws -> TimecodeFrameRate","type":"method"},{"path":"\/documentation\/timecodekit\/avfoundation\/avasset\/videoframerate(interlaced:)","title":"func videoFrameRate(interlaced: Bool?) async throws -> VideoFrameRate","type":"method"},{"path":"\/documentation\/timecodekit\/avfoundation\/avasset\/isvideointerlaced","title":"var isVideoInterlaced: Bool","type":"property"},{"title":"AVAssetTrack Extensions","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/avfoundation\/avassettrack\/durationtimecode(at:limit:base:)","title":"func durationTimecode(at: TimecodeFrameRate?, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase) async throws -> Timecode","type":"method"},{"title":"AVMutableMovie Extensions","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/avfoundation\/avmutablemovie\/addtimecodetrack(starttimecode:duration:extensions:filetype:)","title":"func addTimecodeTrack(startTimecode: Timecode, duration: Timecode?, extensions: CMFormatDescription.Extensions?, fileType: AVFileType) async throws -> AVAssetTrack","type":"method"},{"path":"\/documentation\/timecodekit\/avfoundation\/avmutablemovie\/replacetimecodetrack(starttimecode:duration:extensions:filetype:)","title":"func replaceTimecodeTrack(startTimecode: Timecode, duration: Timecode?, extensions: CMFormatDescription.Extensions?, fileType: AVFileType) async throws -> AVAssetTrack","type":"method"}],"path":"\/documentation\/timecodekit\/avasset-timecode-track","title":"AVAsset Timecode Track","type":"symbol"},{"title":"Additional Value Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/feetandframes\/init(_:subframesbase:)","title":"init<S>(S, subFramesBase: Timecode.SubFramesBase) throws","type":"init"},{"path":"\/documentation\/timecodekit\/feetandframes\/init(feet:frames:subframes:subframesbase:)","title":"init(feet: Int, frames: Int, subFrames: Int, subFramesBase: Timecode.SubFramesBase)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/feetandframes\/feet","title":"var feet: Int","type":"property"},{"path":"\/documentation\/timecodekit\/feetandframes\/framecount","title":"var frameCount: Timecode.FrameCount","type":"property"},{"path":"\/documentation\/timecodekit\/feetandframes\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/timecodekit\/feetandframes\/stringvalue","title":"var stringValue: String","type":"property"},{"path":"\/documentation\/timecodekit\/feetandframes\/stringvalueverbose","title":"var stringValueVerbose: String","type":"property"},{"path":"\/documentation\/timecodekit\/feetandframes\/subframes","title":"var subFrames: Int","type":"property"},{"path":"\/documentation\/timecodekit\/feetandframes\/subframesbase","title":"var subFramesBase: Timecode.SubFramesBase","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/feetandframes\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/timecodekit\/feetandframes\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/feetandframes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/feetandframes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/feetandframes\/id-1v578","title":"var id: `Self`","type":"property"},{"path":"\/documentation\/timecodekit\/feetandframes\/id-6yep7","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/timecodekit\/feetandframes\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/feetandframes","title":"FeetAndFrames","type":"struct"},{"title":"Package Internals","type":"groupMarker"},{"children":[{"title":"Timecode Source Values","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/cmtime(_:)","title":"static func cmTime(CMTime) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/components(_:)","title":"static func components(Timecode.Components) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/components(d:h:m:s:f:sf:)","title":"static func components(d: Int, h: Int, m: Int, s: Int, f: Int, sf: Int) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/feetandframes(_:)","title":"static func feetAndFrames(FeetAndFrames) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/feetandframes(_:subframesbase:)","title":"static func feetAndFrames<S>(S, subFramesBase: Timecode.SubFramesBase) throws -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/feetandframes(feet:frames:subframes:subframesbase:)","title":"static func feetAndFrames(feet: Int, frames: Int, subFrames: Int, subFramesBase: Timecode.SubFramesBase) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/frames(_:)-3ut2p","title":"static func frames(Double) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/frames(_:)-74ujv","title":"static func frames(Timecode.FrameCount.Value) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/frames(_:)-w8ob","title":"static func frames(Timecode.FrameCount) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/frames(_:subframes:)","title":"static func frames(Int, subFrames: Int) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/frames(_:subframesunitinterval:)","title":"static func frames(Int, subFramesUnitInterval: Double) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/rational(_:)","title":"static func rational(Fraction) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/rational(_:_:)","title":"static func rational(Int, Int) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/realtime(seconds:)","title":"static func realTime(seconds: TimeInterval) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/samples(_:samplerate:)-34bbq","title":"static func samples(Double, sampleRate: Int) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/timecodesourcevalue\/samples(_:samplerate:)-8oidp","title":"static func samples(Int, sampleRate: Int) -> TimecodeSourceValue","type":"method"}],"path":"\/documentation\/timecodekit\/timecodesourcevalue","title":"TimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/asynctimecodesourcevalue\/avasset(_:_:)","title":"static func avAsset(AVAsset, RangeAttribute) -> AsyncTimecodeSourceValue","type":"method"}],"path":"\/documentation\/timecodekit\/asynctimecodesourcevalue","title":"AsyncTimecodeSourceValue","type":"struct"},{"path":"\/documentation\/timecodekit\/richtimecodesourcevalue","title":"RichTimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/asyncrichtimecodesourcevalue\/avasset(_:_:)","title":"static func avAsset(AVAsset, RangeAttribute) -> AsyncRichTimecodeSourceValue","type":"method"}],"path":"\/documentation\/timecodekit\/asyncrichtimecodesourcevalue","title":"AsyncRichTimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/formattedtimecodesourcevalue\/string(_:)-5prc4","title":"static func string(String) -> FormattedTimecodeSourceValue","type":"method"},{"path":"\/documentation\/timecodekit\/formattedtimecodesourcevalue\/string(_:)-7c5zh","title":"static func string<S>(S) -> FormattedTimecodeSourceValue","type":"method"}],"path":"\/documentation\/timecodekit\/formattedtimecodesourcevalue","title":"FormattedTimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/guaranteedtimecodesourcevalue\/zero","title":"static let zero: `Self`","type":"property"}],"path":"\/documentation\/timecodekit\/guaranteedtimecodesourcevalue","title":"GuaranteedTimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/guaranteedrichtimecodesourcevalue\/interval(flattening:)","title":"static func interval(flattening: TimecodeInterval) -> GuaranteedRichTimecodeSourceValue","type":"method"}],"path":"\/documentation\/timecodekit\/guaranteedrichtimecodesourcevalue","title":"GuaranteedRichTimecodeSourceValue","type":"struct"},{"title":"Supporting Types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/rangeattribute\/duration","title":"case duration","type":"case"},{"path":"\/documentation\/timecodekit\/rangeattribute\/end","title":"case end","type":"case"},{"path":"\/documentation\/timecodekit\/rangeattribute\/start","title":"case start","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/rangeattribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/timecodekit\/rangeattribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/rangeattribute\/id-716mq","title":"var id: ObjectIdentifier","type":"property"},{"path":"\/documentation\/timecodekit\/rangeattribute\/id-8nrc5","title":"var id: `Self`","type":"property"}],"path":"\/documentation\/timecodekit\/rangeattribute\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/timecodekit\/rangeattribute","title":"RangeAttribute","type":"enum"},{"title":"Frame Rate","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/framerateprotocol\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/framerateprotocol\/alternateframeduration","title":"var alternateFrameDuration: Fraction?","type":"property"},{"path":"\/documentation\/timecodekit\/framerateprotocol\/frameduration","title":"var frameDuration: Fraction","type":"property"},{"path":"\/documentation\/timecodekit\/framerateprotocol\/framedurationcmtime","title":"var frameDurationCMTime: CMTime","type":"property"},{"path":"\/documentation\/timecodekit\/framerateprotocol\/rate","title":"var rate: Fraction","type":"property"},{"path":"\/documentation\/timecodekit\/framerateprotocol\/ratecmtime","title":"var rateCMTime: CMTime","type":"property"},{"path":"\/documentation\/timecodekit\/framerateprotocol\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/timecodekit\/framerateprotocol","title":"FrameRateProtocol","type":"protocol"},{"title":"Utilities","type":"groupMarker"},{"path":"\/documentation\/timecodekit\/swift\/binaryinteger\/numberofdigits","title":"var numberOfDigits: Int","type":"property"}],"path":"\/documentation\/timecodekit\/internals","title":"Internals","type":"symbol"}],"path":"\/documentation\/timecodekit","title":"TimecodeKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}