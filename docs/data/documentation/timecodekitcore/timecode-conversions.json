{"identifier":{"url":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Conversions","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"anchor":"Math--Conversions","identifiers":["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Math","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Rational-Numbers-and-CMTime","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Interval","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/TimecodeTransformer"],"title":"Math & Conversions"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Converting various time values to\/from timecode.","type":"text"}],"metadata":{"roleHeading":"Article","title":"Conversions","role":"article","modules":[{"name":"TimecodeKitCore"}]},"primaryContentSections":[{"kind":"content","content":[{"text":"Convert to Another Frame Rate","level":2,"anchor":"Convert-to-Another-Frame-Rate","type":"heading"},{"syntax":"swift","code":["\/\/ convert between frame rates","try Timecode(.string(\"01:00:00;00\"), at: .fps29_97d)","    .converted(to: .fps29_97) \/\/ == 00:59:56:12"],"type":"codeListing"},{"type":"heading","level":2,"anchor":"Total-Frame-Count","text":"Total Frame Count"},{"type":"codeListing","syntax":"swift","code":["\/\/ timecode → frame count","try Timecode(.components(h: 1), at: .fps23_976)","    .frameCount \/\/ == 86400"]},{"syntax":"swift","code":["\/\/ frame number → timecode","try Timecode(.frames(86400), at: .fps23_976)","\/\/ frame number + subframes → timecode","try Timecode(.frames(86400, subFrames: 25), at: .fps23_976)","\/\/ frame number + subframes unit interval as Double → timecode","try Timecode(.frames(86400.25), at: .fps23_976)","\/\/ frame number + subframes unit interval → timecode","try Timecode(.frames(86400, subFramesUnitInterval: 0.25), at: .fps23_976)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"See "},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/FrameCount-swift.struct","isActive":true,"type":"reference"},{"text":" for more details.","type":"text"}],"type":"paragraph"},{"text":"String","type":"heading","level":2,"anchor":"String"},{"syntax":"swift","code":["\/\/ timecode → string","try Timecode(.components(h: 1), at: .fps23_976)","    .stringValue() \/\/ == \"01:00:00:00\""],"type":"codeListing"},{"syntax":"swift","code":["\/\/ string → timecode","try Timecode(.string(\"01:00:00:00\"), at: .fps23_976)"],"type":"codeListing"},{"inlineContent":[{"text":"See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-String"},{"type":"text","text":" for more details."}],"type":"paragraph"},{"text":"Real Time","type":"heading","anchor":"Real-Time","level":2},{"type":"codeListing","code":["\/\/ timecode → elapsed real-world wall time in seconds","try Timecode(.string(\"01:00:00:00\"), at: .fps23_976)","    .realTimeValue \/\/ == 3603.6 as TimeInterval (Double)"],"syntax":"swift"},{"code":["\/\/ elapsed real-world wall time → timecode","try Timecode(.realTime(seconds: 3603.6), at: .fps23_976)"],"syntax":"swift","type":"codeListing"},{"level":2,"anchor":"Audio-Samples","type":"heading","text":"Audio Samples"},{"code":["\/\/ timecode → elapsed audio samples","try Timecode(.string(\"01:00:00:00\"), at: .fps24)","    .samplesValue(sampleRate: 48000) \/\/ == 172800000"],"type":"codeListing","syntax":"swift"},{"syntax":"swift","type":"codeListing","code":["\/\/ elapsed audio samples → timecode","try Timecode(.samples(172800000, sampleRate: 48000), at: .fps24)"]},{"text":"Rational Fraction \/ CMTime","anchor":"Rational-Fraction--CMTime","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"See "},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Rational-Numbers-and-CMTime","isActive":true,"type":"reference"},{"text":" for more details.","type":"text"}],"type":"paragraph"},{"type":"heading","level":2,"text":"Feet+Frames","anchor":"Feet+Frames"},{"type":"codeListing","code":["\/\/ timecode → feet+frames","try Timecode(.string(\"01:00:00:00\"), at: .fps23_976)","    .feetAndFramesValue \/\/ 5400+00"],"syntax":"swift"},{"syntax":"swift","type":"codeListing","code":["\/\/ feet+frames components → timecode","try Timecode(.feetAndFrames(feet: 5400, frames: 0), at: .fps23_976)","\/\/ feet+frames string → timecode","try Timecode(.feetAndFrames(\"5400+00\"), at: .fps23_976)"]}]}],"hierarchy":{"paths":[["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore"]]},"kind":"article","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/timecodekitcore\/timecode-conversions"]}],"references":{"doc://TimecodeKitCore/documentation/TimecodeKitCore/Rational-Numbers-and-CMTime":{"role":"collectionGroup","url":"\/documentation\/timecodekitcore\/rational-numbers-and-cmtime","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Rational-Numbers-and-CMTime","abstract":[{"type":"text","text":"Using rational (fractional) time values and "},{"type":"codeVoice","code":"CMTime"},{"text":".","type":"text"}],"kind":"article","title":"Rational Numbers & CMTime","type":"topic"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode-String":{"kind":"article","abstract":[{"text":"Working with timecode strings for GUI display or data output.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/timecodekitcore\/timecode-string","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-String","title":"Display String","type":"topic"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode/FrameCount-swift.struct":{"title":"Timecode.FrameCount","abstract":[{"type":"text","text":"Box describing a total elapsed frame count."}],"kind":"symbol","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/FrameCount-swift.struct","url":"\/documentation\/timecodekitcore\/timecode\/framecount-swift.struct","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FrameCount"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FrameCount"}]},"doc://TimecodeKitCore/documentation/TimecodeKitCore/TimecodeTransformer":{"url":"\/documentation\/timecodekitcore\/timecodetransformer","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimecodeTransformer","kind":"identifier"}],"kind":"symbol","title":"TimecodeTransformer","abstract":[{"text":"A timecode transformer containing one or more transform rules in series.","type":"text"}],"navigatorTitle":[{"text":"TimecodeTransformer","kind":"identifier"}],"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/TimecodeTransformer"},"doc://TimecodeKitCore/documentation/TimecodeKitCore":{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore","abstract":[{"type":"text","text":"Value types and related logic for representing and working with SMPTE\/EBU timecode."}],"kind":"symbol","type":"topic","title":"TimecodeKitCore","url":"\/documentation\/timecodekitcore","role":"collection"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Math":{"kind":"article","role":"article","abstract":[{"text":"Performing mathematical calculations between timecodes.","type":"text"}],"url":"\/documentation\/timecodekitcore\/math","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Math","type":"topic","title":"Math"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode-Interval":{"kind":"article","type":"topic","title":"Timecode Interval","role":"collectionGroup","url":"\/documentation\/timecodekitcore\/timecode-interval","abstract":[{"type":"text","text":"Working with intervals between two timecodes."}],"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Interval"}}}