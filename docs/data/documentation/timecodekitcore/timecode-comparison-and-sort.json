{"hierarchy":{"paths":[["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore"]]},"variants":[{"paths":["\/documentation\/timecodekitcore\/timecode-comparison-and-sort"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"title":"Comparison & Sort","roleHeading":"API Collection","modules":[{"name":"TimecodeKitCore"}],"role":"collectionGroup"},"seeAlsoSections":[{"title":"Timecode","generated":true,"identifiers":["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/Properties-swift.struct","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/Components-swift.struct","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-String","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Range-and-Strideable","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Validation"],"anchor":"Timecode"}],"identifier":{"url":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Comparison-and-Sort","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Comparing and sorting the ordering of timecodes."}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Comparable-Conformance","text":"Comparable Conformance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Comparable protocol conformance."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Two "},{"type":"reference","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","isActive":true},{"type":"text","text":" instances can be compared linearly using common comparison operators."}]},{"type":"codeListing","code":["try Timecode(.string(\"01:00:00:00\"), at: .fps24) ","    == Timecode(.string(\"01:00:00:00\"), at: .fps24) \/\/ == true","","try Timecode(.string(\"00:59:50:00\"), at: .fps24) ","    < Timecode(.string(\"01:00:00:00\"), at: .fps24) \/\/ == true","","try Timecode(.string(\"00:59:50:00\"), at: .fps24) ","    > Timecode(.string(\"01:00:00:00\"), at: .fps24) \/\/ == false"],"syntax":"swift"},{"type":"heading","text":"Comparing using Timeline Context","anchor":"Comparing-using-Timeline-Context","level":2},{"type":"paragraph","inlineContent":[{"text":"Special comparison methods based on non-zero timeline origin timecode.","type":"text"}]},{"inlineContent":[{"text":"Sometimes a timeline does not have a zero start time (00:00:00:00). For example, many DAW applications such as Pro Tools allow a project start time to be set to any timecode. Its timeline then extends for 24 hours from that timecode, wrapping over 00:00:00:00 at some point along the timeline.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example, given a 24 hour limit:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A timeline start of 00:00:00:00 @ 24fps:"}]},{"type":"paragraph","inlineContent":[{"text":"24 hours elapses from 00:00:00:00 → 23:59:59:23","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A timeline start of 20:00:00:00 @ 24fps:"}],"type":"paragraph"},{"inlineContent":[{"text":"24 hours elapses from 20:00:00:00 → 00:00:00:00 → 19:59:59:23","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This would mean for example, that 21:00:00:00 is < 00:00:00:00 since it is earlier in the wrapping timeline, and 18:00:00:00 is > 21:00:00:00 since it is later in the wrapping timeline.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Methods to sort and test sort order of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","type":"reference"},{"text":" collections are provided.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Note that passing ","type":"text"},{"type":"codeVoice","code":"timelineStart"},{"type":"text","text":" of "},{"code":"nil","type":"codeVoice"},{"text":" or zero (00:00:00:00) is the same as using the standard  ","type":"text"},{"type":"codeVoice","code":"<"},{"type":"text","text":", "},{"code":"==","type":"codeVoice"},{"type":"text","text":", or  "},{"code":">","type":"codeVoice"},{"text":" operators as a sort comparator.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let timecode1: Timecode","let timecode2: Timecode","let start: Timecode","let result = timecode1.compare(to: timecode2, timelineStart: start)","\/\/ result is a ComparisonResult of orderedAscending, orderedSame, or orderedDescending"]},{"text":"Sorting","level":2,"type":"heading","anchor":"Sorting"},{"inlineContent":[{"type":"text","text":"Collections of "},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" can be sorted ascending or descending."}],"type":"paragraph"},{"syntax":"swift","code":["let timeline: [Timecode] = [ ... ]","let sorted = timeline.sorted() \/\/ ascending","let sorted = timeline.sorted(ascending: false) \/\/ descending"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These collections can also be tested for sort order:"}]},{"syntax":"swift","code":["let timeline: [Timecode] = [ ... ]","let isSorted: Bool = timeline.isSorted() \/\/ ascending","let isSorted: Bool = timeline.isSorted(ascending: false) \/\/ descending"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"On newer systems, a ","type":"text"},{"code":"SortComparator","type":"codeVoice"},{"type":"text","text":" called "},{"isActive":true,"type":"reference","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/TimecodeSortComparator"},{"type":"text","text":" is available as well."}]},{"type":"codeListing","syntax":"swift","code":["let comparator = TimecodeSortComparator() \/\/ ascending","let comparator = TimecodeSortComparator(order: .reverse) \/\/ descending","","let timeline: [Timecode] = [ ... ]","let sorted = timeline.sorted(using: comparator)"]},{"text":"Sorting using Timeline Context","level":2,"type":"heading","anchor":"Sorting-using-Timeline-Context"},{"type":"paragraph","inlineContent":[{"text":"For an explanation of timeline context, see ","type":"text"},{"type":"reference","isActive":true,"identifier":"#Comparing-using-Timeline-Context>"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"Collections of ","type":"text"},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","isActive":true,"type":"reference"},{"type":"text","text":" can be sorted ascending or descending."}],"type":"paragraph"},{"type":"codeListing","code":["let timeline: [Timecode] = [ ... ]","let start = try Timecode(.string(\"01:00:00:00\"), at: .fps24)","let sorted = timeline.sorted(timelineStart: start) \/\/ ascending","let sorted = timeline.sorted(order: .reverse, timelineStart: start) \/\/ descending"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These collections can also be tested for sort order:"}]},{"type":"codeListing","code":["let timeline: [Timecode] = [ ... ]","let start = try Timecode(.string(\"01:00:00:00\"), at: .fps24)","let isSorted: Bool = timeline.isSorted(timelineStart: start) \/\/ ascending","let isSorted: Bool = timeline.isSorted(order: .reverse, timelineStart: start) \/\/ descending"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"On newer systems, a "},{"code":"SortComparator","type":"codeVoice"},{"type":"text","text":" called "},{"type":"reference","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/TimecodeSortComparator","isActive":true},{"text":" is available as well.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let start = try Timecode(.string(\"01:00:00:00\"), at: .fps24)","let comparator = TimecodeSortComparator(timelineStart: start) \/\/ ascending","let comparator = TimecodeSortComparator(order: .reverse, timelineStart: start) \/\/ descending","","let timeline: [Timecode] = [ ... ]","let sorted = timeline.sorted(using: comparator)"],"syntax":"swift"}]}],"kind":"article","topicSections":[{"identifiers":["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/compare(to:timelineStart:)"],"title":"Instance Comparison","anchor":"Instance-Comparison"},{"title":"Collection Sorting","identifiers":["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Swift\/Collection\/isSorted(ascending:timelineStart:)","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Swift\/MutableCollection\/sort(ascending:timelineStart:)","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Swift\/Collection\/sorted()","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Swift\/Collection\/sorted(ascending:timelineStart:)"],"anchor":"Collection-Sorting"},{"identifiers":["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/TimecodeSortComparator"],"title":"SortComparator","anchor":"SortComparator"}],"references":{"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode/upperLimit-swift.property":{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/upperLimit-swift.property","role":"symbol","kind":"symbol","abstract":[{"text":"Timecode maximum upper bound.","type":"text"}],"title":"upperLimit","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upperLimit","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15TimecodeKitCore0A0V","text":"Timecode","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"UpperLimit","kind":"typeIdentifier","preciseIdentifier":"s:15TimecodeKitCore0A0V10UpperLimitO"}],"url":"\/documentation\/timecodekitcore\/timecode\/upperlimit-swift.property"},"#Comparing-using-Timeline-Context>":{"identifier":"#Comparing-using-Timeline-Context>","titleInlineContent":[{"type":"text","text":"Comparing using Timeline Context"}],"url":"#Comparing-using-Timeline-Context>","title":"Comparing using Timeline Context","type":"link"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Swift/Collection/sorted()":{"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FrameRateProtocol"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sorted","kind":"identifier"},{"kind":"text","text":"() -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Swift\/Collection\/sorted()","role":"symbol","abstract":[{"type":"text","text":"Returns an array containing Elements logically sorted."}],"kind":"symbol","title":"sorted()","url":"\/documentation\/timecodekitcore\/swift\/collection\/sorted()","type":"topic"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Swift/MutableCollection/sort(ascending:timelineStart:)":{"title":"sort(ascending:timelineStart:)","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Swift\/MutableCollection\/sort(ascending:timelineStart:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sort","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ascending"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timelineStart","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15TimecodeKitCore0A0V","text":"Timecode","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Sorts the collection in place by sorting all "},{"type":"reference","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","isActive":true},{"type":"text","text":" instances chronologically, either"},{"text":" ","type":"text"},{"type":"text","text":"ascending or descending."}],"role":"symbol","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":", "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Timecode","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"MutableCollection","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","url":"\/documentation\/timecodekitcore\/swift\/mutablecollection\/sort(ascending:timelinestart:)"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Swift/Collection/isSorted(ascending:timelineStart:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Timecode","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isSorted"},{"kind":"text","text":"("},{"text":"ascending","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"timelineStart","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Timecode","preciseIdentifier":"s:15TimecodeKitCore0A0V","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Swift\/Collection\/isSorted(ascending:timelineStart:)","role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if all "},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","isActive":true,"type":"reference"},{"text":" instances are ordered chronologically, either ascending","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or descending according to the "},{"type":"codeVoice","code":"ascending"},{"text":" parameter.","type":"text"}],"kind":"symbol","title":"isSorted(ascending:timelineStart:)","type":"topic","url":"\/documentation\/timecodekitcore\/swift\/collection\/issorted(ascending:timelinestart:)"},"doc://TimecodeKitCore/documentation/TimecodeKitCore":{"abstract":[{"text":"Value types and related logic for representing and working with SMPTE\/EBU timecode.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","title":"TimecodeKitCore","url":"\/documentation\/timecodekitcore","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Swift/Collection/sorted(ascending:timelineStart:)":{"title":"sorted(ascending:timelineStart:)","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Swift\/Collection\/sorted(ascending:timelineStart:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ascending"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"timelineStart","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:15TimecodeKitCore0A0V"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[{"text":"Returns a collection sorting all ","type":"text"},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","isActive":true,"type":"reference"},{"type":"text","text":" instances chronologically, either ascending"},{"type":"text","text":" "},{"text":"or descending.","type":"text"}],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Timecode"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","url":"\/documentation\/timecodekitcore\/swift\/collection\/sorted(ascending:timelinestart:)"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode/compare(to:timelineStart:)":{"abstract":[{"type":"text","text":"Compare two "},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","isActive":true,"type":"reference"},{"type":"text","text":" instances, optionally using a timeline that does not start at"},{"text":" ","type":"text"},{"text":"00:00:00:00. Timeline length and wrap point is determined by the","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/upperLimit-swift.property","isActive":true},{"type":"text","text":" property. The timeline is considered linear for 24 hours (or"},{"type":"text","text":" "},{"type":"text","text":"100 days) from this start time, wrapping around the upper limit."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"compare","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15TimecodeKitCore0A0V","text":"Timecode","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"timelineStart","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15TimecodeKitCore0A0V","kind":"typeIdentifier","text":"Timecode"},{"text":"?) -> ","kind":"text"},{"text":"ComparisonResult","kind":"typeIdentifier","preciseIdentifier":"c:@E@NSComparisonResult"}],"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/compare(to:timelineStart:)","title":"compare(to:timelineStart:)","type":"topic","url":"\/documentation\/timecodekitcore\/timecode\/compare(to:timelinestart:)","role":"symbol"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode-String":{"title":"Display String","role":"collectionGroup","abstract":[{"type":"text","text":"Working with timecode strings for GUI display or data output."}],"type":"topic","kind":"article","url":"\/documentation\/timecodekitcore\/timecode-string","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-String"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode/Properties-swift.struct":{"url":"\/documentation\/timecodekitcore\/timecode\/properties-swift.struct","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Properties"}],"title":"Timecode.Properties","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/Properties-swift.struct","abstract":[{"type":"reference","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","isActive":true},{"text":" properties.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Properties"}]},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode-Validation":{"kind":"article","type":"topic","title":"Validation","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Validation","url":"\/documentation\/timecodekitcore\/timecode-validation","abstract":[{"type":"text","text":"Timecode validation based on frame rate and upper limit."}],"role":"collectionGroup"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode":{"abstract":[{"type":"text","text":"Value type representing SMPTE\/EBU timecode."}],"role":"symbol","title":"Timecode","kind":"symbol","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","navigatorTitle":[{"kind":"identifier","text":"Timecode"}],"url":"\/documentation\/timecodekitcore\/timecode","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Timecode","kind":"identifier"}]},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode/Components-swift.struct":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Components"}],"navigatorTitle":[{"text":"Components","kind":"identifier"}],"title":"Timecode.Components","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/Components-swift.struct","url":"\/documentation\/timecodekitcore\/timecode\/components-swift.struct","abstract":[{"type":"text","text":"Primitive struct describing timecode component values, agnostic of frame rate."}],"role":"symbol"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode-Range-and-Strideable":{"url":"\/documentation\/timecodekitcore\/timecode-range-and-strideable","kind":"article","role":"article","title":"Range & Strideable","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Range-and-Strideable","abstract":[{"type":"text","text":"Forming a "},{"type":"codeVoice","code":"Range"},{"type":"text","text":" or "},{"code":"Stride","type":"codeVoice"},{"type":"text","text":" between two "},{"type":"reference","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","isActive":true},{"type":"text","text":" instances."}],"type":"topic"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/TimecodeSortComparator":{"abstract":[{"text":"Sort comparator for ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode"},{"text":" with optional timeline start time support.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimecodeSortComparator","kind":"identifier"}],"url":"\/documentation\/timecodekitcore\/timecodesortcomparator","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/TimecodeSortComparator","title":"TimecodeSortComparator","navigatorTitle":[{"text":"TimecodeSortComparator","kind":"identifier"}]}}}