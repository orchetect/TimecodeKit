{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"roleHeading":"Article","title":"Math","modules":[{"name":"TimecodeKitCore"}],"role":"article"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/timecodekitcore\/math"]}],"identifier":{"url":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Math","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"title":"Math & Conversions","identifiers":["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Conversions","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Rational-Numbers-and-CMTime","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Interval","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/TimecodeTransformer"],"anchor":"Math--Conversions"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Math operations are possible by either methods or operators."}],"type":"paragraph"},{"inlineContent":[{"text":"Addition and subtraction may be performed using two timecode operands to produce a timecode result.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"Timecode"},{"text":" + ","type":"text"},{"type":"codeVoice","code":"Timecode"},{"text":" = ","type":"text"},{"code":"Timecode","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Timecode"},{"text":" - ","type":"text"},{"code":"Timecode","type":"codeVoice"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Multiplication and division may be performed using one timecode operand and one floating-point number operand. This forms a calculation of timecode (position or duration) against a number of iterations or subdivisions."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Multiplying timecode against timecode in order to produce a timecode result is not possible since it is ambiguous and considered undefined behavior.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"text":" * ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":" = ","type":"text"},{"code":"Timecode","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" * "},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" is undefined and therefore not implemented"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Timecode"},{"text":" \/ ","type":"text"},{"code":"Timecode","type":"codeVoice"},{"text":" = ","type":"text"},{"type":"codeVoice","code":"Double"}],"type":"paragraph"}]}]},{"anchor":"Arithmetic-Operators","text":"Arithmetic Operators","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Arithmetic operators are provided for convenience. These operators employ the ","type":"text"},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/ValidationRule\/wrapping","isActive":true,"type":"reference"},{"type":"text","text":" validation rule in the event of underflows or overflows."}]},{"type":"codeListing","syntax":"swift","code":["let tc1 = try Timecode(.string(\"01:00:00:00\"), at: .fps23_976)","let tc2 = try Timecode(.string(\"00:02:00:00\"), at: .fps23_976)","","(tc1 + tc2).stringValue() \/\/ == \"01:02:00:00\"","(tc1 - tc2).stringValue() \/\/ == \"00:58:00:00\"","(tc1 * 2.0).stringValue() \/\/ == \"02:00:00:00\"","(tc1 \/ 2.0).stringValue() \/\/ == \"00:30:00:00\"","tc1 \/ tc2 \/\/ == 30.0"]},{"level":2,"text":"Arithmetic Methods","anchor":"Arithmetic-Methods","type":"heading"},{"inlineContent":[{"text":"Arithmetic methods follow the same behavior as ","type":"text"},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","isActive":true,"type":"reference"},{"text":" initializers whereby the operation can be completed either using validation with a throwing call, or by using validation rules to constrain the result (See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/ValidationRule"},{"type":"text","text":")."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The right-hand operand may be a "},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","type":"reference","isActive":true},{"type":"text","text":" instance, or any time source value."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"add()","type":"codeVoice"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"adding()"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"subtract()"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"subtracting()"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"multiply()"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"multiplying()"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"divide()"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"dividing()"}]}]}]},{"type":"codeListing","code":["var tc1 = try Timecode(.string(\"01:00:00:00\"), at: .fps23_976)","var tc2 = try Timecode(.string(\"00:00:02:00\"), at: .fps23_976)","","\/\/ in-place mutation","try tc1.add(tc2)","try tc1.add(tc2, by: .wrapping) \/\/ using result validation rule","","\/\/ return a new instance","let tc3 = try tc1.adding(tc2)","let tc3 = try tc1.adding(tc2, by: .wrapping) \/\/ using result validation rule"],"syntax":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore"]]},"kind":"article","abstract":[{"type":"text","text":"Performing mathematical calculations between timecodes."}],"references":{"doc://TimecodeKitCore/documentation/TimecodeKitCore/Rational-Numbers-and-CMTime":{"url":"\/documentation\/timecodekitcore\/rational-numbers-and-cmtime","abstract":[{"type":"text","text":"Using rational (fractional) time values and "},{"type":"codeVoice","code":"CMTime"},{"type":"text","text":"."}],"title":"Rational Numbers & CMTime","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Rational-Numbers-and-CMTime","role":"collectionGroup","type":"topic","kind":"article"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode/ValidationRule/wrapping":{"title":"Timecode.ValidationRule.wrapping","abstract":[{"text":"Wrap over or under the valid timecode range if necessary.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapping"}],"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/ValidationRule\/wrapping","url":"\/documentation\/timecodekitcore\/timecode\/validationrule\/wrapping","type":"topic","kind":"symbol"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode/ValidationRule":{"abstract":[],"type":"topic","kind":"symbol","title":"Timecode.ValidationRule","url":"\/documentation\/timecodekitcore\/timecode\/validationrule","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/ValidationRule","navigatorTitle":[{"kind":"identifier","text":"ValidationRule"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"ValidationRule","kind":"identifier"}]},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode-Conversions":{"kind":"article","abstract":[{"text":"Converting various time values to\/from timecode.","type":"text"}],"title":"Conversions","role":"article","type":"topic","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Conversions","url":"\/documentation\/timecodekitcore\/timecode-conversions"},"doc://TimecodeKitCore/documentation/TimecodeKitCore":{"title":"TimecodeKitCore","type":"topic","kind":"symbol","url":"\/documentation\/timecodekitcore","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore","abstract":[{"text":"Value types and related logic for representing and working with SMPTE\/EBU timecode.","type":"text"}],"role":"collection"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode":{"type":"topic","abstract":[{"text":"Value type representing SMPTE\/EBU timecode.","type":"text"}],"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","title":"Timecode","role":"symbol","kind":"symbol","url":"\/documentation\/timecodekitcore\/timecode","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Timecode","kind":"identifier"}],"navigatorTitle":[{"text":"Timecode","kind":"identifier"}]},"doc://TimecodeKitCore/documentation/TimecodeKitCore/TimecodeTransformer":{"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/TimecodeTransformer","url":"\/documentation\/timecodekitcore\/timecodetransformer","abstract":[{"type":"text","text":"A timecode transformer containing one or more transform rules in series."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimecodeTransformer"}],"navigatorTitle":[{"kind":"identifier","text":"TimecodeTransformer"}],"title":"TimecodeTransformer"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode-Interval":{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Interval","kind":"article","title":"Timecode Interval","abstract":[{"text":"Working with intervals between two timecodes.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/timecodekitcore\/timecode-interval","type":"topic"}}}