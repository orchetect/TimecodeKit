{"hierarchy":{"paths":[["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"title":"Math & Conversions","anchor":"Math--Conversions","identifiers":["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Conversions","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Rational-Numbers-and-CMTime","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Interval","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/TimecodeTransformer"],"generated":true}],"abstract":[{"text":"Performing mathematical calculations between timecodes.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Math operations are possible by either methods or operators."}]},{"inlineContent":[{"text":"Addition and subtraction may be performed using two timecode operands to produce a timecode result.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"Timecode","type":"codeVoice"},{"type":"text","text":" + "},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" - "},{"type":"codeVoice","code":"Timecode"},{"text":" = ","type":"text"},{"type":"codeVoice","code":"Timecode"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Multiplication and division may be performed using one timecode operand and one floating-point number operand. This forms a calculation of timecode (position or duration) against a number of iterations or subdivisions."}]},{"inlineContent":[{"text":"Multiplying timecode against timecode in order to produce a timecode result is not possible since it is ambiguous and considered undefined behavior.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" * "},{"code":"Double","type":"codeVoice"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"text":" * ","type":"text"},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" is undefined and therefore not implemented"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" \/ "},{"code":"Double","type":"codeVoice"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"Timecode"},{"text":" = ","type":"text"},{"code":"Double","type":"codeVoice"}]}]}],"type":"unorderedList"},{"level":2,"text":"Arithmetic Operators","type":"heading","anchor":"Arithmetic-Operators"},{"inlineContent":[{"text":"Arithmetic operators are provided for convenience. These operators employ the ","type":"text"},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/ValidationRule\/wrapping","type":"reference","isActive":true},{"text":" validation rule in the event of underflows or overflows.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let tc1 = try Timecode(.string(\"01:00:00:00\"), at: .fps23_976)","let tc2 = try Timecode(.string(\"00:02:00:00\"), at: .fps23_976)","","(tc1 + tc2).stringValue() \/\/ == \"01:02:00:00\"","(tc1 - tc2).stringValue() \/\/ == \"00:58:00:00\"","(tc1 * 2.0).stringValue() \/\/ == \"02:00:00:00\"","(tc1 \/ 2.0).stringValue() \/\/ == \"00:30:00:00\"","tc1 \/ tc2 \/\/ == 30.0"],"type":"codeListing"},{"type":"heading","level":2,"text":"Arithmetic Methods","anchor":"Arithmetic-Methods"},{"inlineContent":[{"type":"text","text":"Arithmetic methods follow the same behavior as "},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","isActive":true,"type":"reference"},{"type":"text","text":" initializers whereby the operation can be completed either using validation with a throwing call, or by using validation rules to constrain the result (See "},{"isActive":true,"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/ValidationRule","type":"reference"},{"text":").","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The right-hand operand may be a "},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","isActive":true,"type":"reference"},{"type":"text","text":" instance, or any time source value."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"add()"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"adding()"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"subtract()"},{"text":" \/ ","type":"text"},{"code":"subtracting()","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"multiply()"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"multiplying()"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"divide()"},{"text":" \/ ","type":"text"},{"code":"dividing()","type":"codeVoice"}]}]}],"type":"unorderedList"},{"code":["var tc1 = try Timecode(.string(\"01:00:00:00\"), at: .fps23_976)","var tc2 = try Timecode(.string(\"00:00:02:00\"), at: .fps23_976)","","\/\/ in-place mutation","try tc1.add(tc2)","try tc1.add(tc2, by: .wrapping) \/\/ using result validation rule","","\/\/ return a new instance","let tc3 = try tc1.adding(tc2)","let tc3 = try tc1.adding(tc2, by: .wrapping) \/\/ using result validation rule"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/timecodekitcore\/math"]}],"identifier":{"url":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Math","interfaceLanguage":"swift"},"sections":[],"metadata":{"roleHeading":"Article","modules":[{"name":"TimecodeKitCore"}],"role":"article","title":"Math"},"kind":"article","references":{"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode/ValidationRule/wrapping":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/ValidationRule\/wrapping","url":"\/documentation\/timecodekitcore\/timecode\/validationrule\/wrapping","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"wrapping","kind":"identifier"}],"abstract":[{"text":"Wrap over or under the valid timecode range if necessary.","type":"text"}],"title":"Timecode.ValidationRule.wrapping"},"doc://TimecodeKitCore/documentation/TimecodeKitCore":{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore","type":"topic","role":"collection","abstract":[{"text":"Value types and related logic for representing and working with SMPTE\/EBU timecode.","type":"text"}],"title":"TimecodeKitCore","url":"\/documentation\/timecodekitcore","kind":"symbol"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode-Conversions":{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Conversions","role":"article","abstract":[{"type":"text","text":"Converting various time values to\/from timecode."}],"type":"topic","kind":"article","url":"\/documentation\/timecodekitcore\/timecode-conversions","title":"Conversions"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode-Interval":{"kind":"article","abstract":[{"type":"text","text":"Working with intervals between two timecodes."}],"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Interval","type":"topic","role":"collectionGroup","url":"\/documentation\/timecodekitcore\/timecode-interval","title":"Timecode Interval"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode":{"kind":"symbol","abstract":[{"type":"text","text":"Value type representing SMPTE\/EBU timecode."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Timecode","kind":"identifier"}],"title":"Timecode","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","navigatorTitle":[{"kind":"identifier","text":"Timecode"}],"role":"symbol","url":"\/documentation\/timecodekitcore\/timecode"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode/ValidationRule":{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/ValidationRule","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"ValidationRule","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ValidationRule","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[],"url":"\/documentation\/timecodekitcore\/timecode\/validationrule","title":"Timecode.ValidationRule"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Rational-Numbers-and-CMTime":{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Rational-Numbers-and-CMTime","role":"collectionGroup","abstract":[{"type":"text","text":"Using rational (fractional) time values and "},{"type":"codeVoice","code":"CMTime"},{"text":".","type":"text"}],"type":"topic","kind":"article","url":"\/documentation\/timecodekitcore\/rational-numbers-and-cmtime","title":"Rational Numbers & CMTime"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/TimecodeTransformer":{"navigatorTitle":[{"text":"TimecodeTransformer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A timecode transformer containing one or more transform rules in series."}],"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/TimecodeTransformer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TimecodeTransformer"}],"type":"topic","role":"symbol","url":"\/documentation\/timecodekitcore\/timecodetransformer","title":"TimecodeTransformer"}}}