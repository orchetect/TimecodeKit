{"variants":[{"paths":["\/documentation\/timecodekitcore\/math"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Performing mathematical calculations between timecodes.","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Math & Conversions","anchor":"Math--Conversions","identifiers":["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Conversions","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Rational-Numbers-and-CMTime","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Interval","doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/TimecodeTransformer"]}],"hierarchy":{"paths":[["doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore"]]},"kind":"article","metadata":{"modules":[{"name":"TimecodeKitCore"}],"title":"Math","roleHeading":"Article","role":"article"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Math operations are possible by either methods or operators.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Addition and subtraction may be performed using two timecode operands to produce a timecode result."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"code":"Timecode","type":"codeVoice"},{"type":"text","text":" + "},{"code":"Timecode","type":"codeVoice"},{"text":" = ","type":"text"},{"type":"codeVoice","code":"Timecode"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" - "},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Multiplication and division may be performed using one timecode operand and one floating-point number operand. This forms a calculation of timecode (position or duration) against a number of iterations or subdivisions.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Multiplying timecode against timecode in order to produce a timecode result is not possible since it is ambiguous and considered undefined behavior."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" * "},{"code":"Double","type":"codeVoice"},{"text":" = ","type":"text"},{"code":"Timecode","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" * "},{"type":"codeVoice","code":"Timecode"},{"text":" is undefined and therefore not implemented","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" = "},{"code":"Timecode","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" \/ "},{"code":"Timecode","type":"codeVoice"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Double"}]}]}],"type":"unorderedList"},{"level":2,"type":"heading","anchor":"Arithmetic-Operators","text":"Arithmetic Operators"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Arithmetic operators are provided for convenience. These operators employ the "},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/ValidationRule\/wrapping","isActive":true,"type":"reference"},{"type":"text","text":" validation rule in the event of underflows or overflows."}]},{"syntax":"swift","type":"codeListing","code":["let tc1 = try Timecode(.string(\"01:00:00:00\"), at: .fps23_976)","let tc2 = try Timecode(.string(\"00:02:00:00\"), at: .fps23_976)","","(tc1 + tc2).stringValue() \/\/ == \"01:02:00:00\"","(tc1 - tc2).stringValue() \/\/ == \"00:58:00:00\"","(tc1 * 2.0).stringValue() \/\/ == \"02:00:00:00\"","(tc1 \/ 2.0).stringValue() \/\/ == \"00:30:00:00\"","tc1 \/ tc2 \/\/ == 30.0"]},{"type":"heading","text":"Arithmetic Methods","level":2,"anchor":"Arithmetic-Methods"},{"inlineContent":[{"type":"text","text":"Arithmetic methods follow the same behavior as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode"},{"text":" initializers whereby the operation can be completed either using validation with a throwing call, or by using validation rules to constrain the result (See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/ValidationRule"},{"text":").","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The right-hand operand may be a "},{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","type":"reference","isActive":true},{"type":"text","text":" instance, or any time source value."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"add()","type":"codeVoice"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"adding()"}]}]},{"content":[{"inlineContent":[{"code":"subtract()","type":"codeVoice"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"subtracting()"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"multiply()"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"multiplying()"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"divide()","type":"codeVoice"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"dividing()"}],"type":"paragraph"}]}],"type":"unorderedList"},{"code":["var tc1 = try Timecode(.string(\"01:00:00:00\"), at: .fps23_976)","var tc2 = try Timecode(.string(\"00:00:02:00\"), at: .fps23_976)","","\/\/ in-place mutation","try tc1.add(tc2)","try tc1.add(tc2, by: .wrapping) \/\/ using result validation rule","","\/\/ return a new instance","let tc3 = try tc1.adding(tc2)","let tc3 = try tc1.adding(tc2, by: .wrapping) \/\/ using result validation rule"],"syntax":"swift","type":"codeListing"}]}],"identifier":{"url":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Math","interfaceLanguage":"swift"},"sections":[],"references":{"doc://TimecodeKitCore/documentation/TimecodeKitCore/TimecodeTransformer":{"url":"\/documentation\/timecodekitcore\/timecodetransformer","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TimecodeTransformer","kind":"identifier"}],"kind":"symbol","title":"TimecodeTransformer","abstract":[{"text":"A timecode transformer containing one or more transform rules in series.","type":"text"}],"navigatorTitle":[{"text":"TimecodeTransformer","kind":"identifier"}],"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/TimecodeTransformer"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode-Conversions":{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Conversions","url":"\/documentation\/timecodekitcore\/timecode-conversions","role":"article","type":"topic","kind":"article","title":"Conversions","abstract":[{"type":"text","text":"Converting various time values to\/from timecode."}]},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode/ValidationRule":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidationRule"}],"abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ValidationRule"}],"url":"\/documentation\/timecodekitcore\/timecode\/validationrule","type":"topic","title":"Timecode.ValidationRule","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/ValidationRule"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode":{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode","role":"symbol","navigatorTitle":[{"text":"Timecode","kind":"identifier"}],"abstract":[{"text":"Value type representing SMPTE\/EBU timecode.","type":"text"}],"title":"Timecode","type":"topic","kind":"symbol","url":"\/documentation\/timecodekitcore\/timecode","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Timecode","kind":"identifier"}]},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode/ValidationRule/wrapping":{"abstract":[{"type":"text","text":"Wrap over or under the valid timecode range if necessary."}],"type":"topic","url":"\/documentation\/timecodekitcore\/timecode\/validationrule\/wrapping","title":"Timecode.ValidationRule.wrapping","role":"symbol","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode\/ValidationRule\/wrapping","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapping","kind":"identifier"}]},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Rational-Numbers-and-CMTime":{"role":"collectionGroup","url":"\/documentation\/timecodekitcore\/rational-numbers-and-cmtime","identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Rational-Numbers-and-CMTime","abstract":[{"type":"text","text":"Using rational (fractional) time values and "},{"type":"codeVoice","code":"CMTime"},{"text":".","type":"text"}],"kind":"article","title":"Rational Numbers & CMTime","type":"topic"},"doc://TimecodeKitCore/documentation/TimecodeKitCore":{"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore","abstract":[{"type":"text","text":"Value types and related logic for representing and working with SMPTE\/EBU timecode."}],"kind":"symbol","type":"topic","title":"TimecodeKitCore","url":"\/documentation\/timecodekitcore","role":"collection"},"doc://TimecodeKitCore/documentation/TimecodeKitCore/Timecode-Interval":{"kind":"article","type":"topic","title":"Timecode Interval","role":"collectionGroup","url":"\/documentation\/timecodekitcore\/timecode-interval","abstract":[{"type":"text","text":"Working with intervals between two timecodes."}],"identifier":"doc:\/\/TimecodeKitCore\/documentation\/TimecodeKitCore\/Timecode-Interval"}}}