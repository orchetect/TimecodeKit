{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Timecode-Time-Value-Types","level":2,"type":"heading","text":"Timecode Time Value Types"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to simplify initialization API and make time value types more easily discoverable, time values are now passed in as static wrappers to Timecode inits."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"timecode-init.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ 1.x API","Timecode(\"01:00:00:00\", at: ._24)","\/\/ 2.x API","Timecode(.string(\"01:00:00:00\"), at: ._24)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Full list of corresponding time value enum cases:"}]},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"1.x API"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"2.x API"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(TCC(), at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.zero, at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(TCC(h: 1, m: 0, s: 0, f: 0), at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.components(h: 1, m: 0, s: 0, f: 0), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.frames(1234), at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.frames(1234), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.combined(frames: 123.5), at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.frames(123.5), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.split(frames: 123, subFrames: 50), at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.frames(123, subFrames: 50), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.splitUnitInterval(frames: 123, subFramesUnitInterval: 0.5), at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.frames(123, subFramesUnitInterval: 0.5), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(\"01:00:00:00\", at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.string(\"01:00:00:00\"), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(realTime: 123.0, at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.realTime(seconds: 123.0), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(samples: 123.0, sampleRate: 48000, at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.samples(123.0, sampleRate: 48000), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(startOf: AVAsset(), at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.avAsset(AVAsset(), .start), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(durationOf: AVAsset(), at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.avAsset(AVAsset(), .duration), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(endOf: AVAsset(), at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.avAsset(AVAsset(), .end), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(CMTime(), at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.cmTime(CMTime()), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(Fraction(60, 1), at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.rational(60, 1), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(FeetAndFrames(feet: 60, frames: 10), at: ._24)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.feetAndFrames(feet: 60, frames: 10), at: ._24)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(flattening: TimecodeInterval())"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode(.interval(flattening: TimecodeInterval()))"}]}]]],"header":"row"},{"anchor":"Timecode-Validation","level":2,"type":"heading","text":"Timecode Validation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Time value validation has changed from parameter labels to a new "},{"type":"codeVoice","code":"by:"},{"type":"text","text":" parameter."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ \"exactly\" was denoted by an empty parameter label, and is a throwing init","\/\/ 1.x API","try Timecode(\"01:00:00:00\", at: ._24)","\/\/ 2.x API","try Timecode(.string(\"01:00:00:00\"), at: ._24)","","\/\/ \"clamping\"","\/\/ 1.x API","Timecode(clamping: \"01:00:00:00\", at: ._24)","\/\/ 2.x API","Timecode(.string(\"01:00:00:00\"), at: ._24, by: .clamping)","","\/\/ \"wrapping\"","\/\/ 1.x API","Timecode(wrapping: \"01:00:00:00\", at: ._24)","\/\/ 2.x API","Timecode(.string(\"01:00:00:00\"), at: ._24, by: .wrapping)","","\/\/ \"rawValues\"","\/\/ 1.x API","Timecode(rawValues: \"01:00:00:00\", at: ._24)","\/\/ 2.x API","Timecode(.string(\"01:00:00:00\"), at: ._24, by: .allowingInvalid)"]},{"anchor":"Timecode-String-Value","level":2,"type":"heading","text":"Timecode String Value"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"stringValue"},{"type":"text","text":" property is now the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/stringValue(format:)"},{"type":"text","text":" method."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Timecode struct no longer stores string formatting properties. Instead, formatting options are now optionally passed when calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/stringValue(format:)"},{"type":"text","text":"."}]}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ 1.x API","let timecode = try Timecode(TCC(h: 1, m: 0, s: 0, f: 0, sf: 50), at: ._24)","timecode.stringValue \/\/ \"01:00:00:00\"","timecode.stringFormat = [.showSubFrames]","timecode.stringValue \/\/ \"01:00:00:00.50\"","\/\/ 2.x API","let timecode = try Timecode(.components(h: 1, m: 0, s: 0, f: 0, sf: 50), at: ._24)","timecode.stringValue() \/\/ \"01:00:00:00\"","timecode.stringValue(format: [.showSubFrames]) \/\/ \"01:00:00:00.50\""]},{"anchor":"Timecode-Properties","level":2,"type":"heading","text":"Timecode Properties"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Timecode metadata can now be constructed and passed around using a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/Properties-swift.struct"},{"type":"text","text":" struct. It contains:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"frameRate"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"subFramesBase"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"upperLimit"}]}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ construct a Timecode.Properties instance","\/\/ and pass it to a new Timecode instance","let properties = Timecode.Properties(","    rate: ._24,","    base: ._80SubFrames,","    limit: ._100Days",")","let timecode = Timecode(","    .components(h: 1, m: 0, s: 0, f: 0),","    using: properties",")","","\/\/ it can also be fetched using the `properties` property and used to","\/\/ construct a new Timecode with the same properties","let newTimecode = Timecode(","    .components(h: 2, m: 0, s: 0, f: 0),","    using: timecode.properties",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is still possible to pass properties directly as initializer parameters if desired:"}]},{"type":"codeListing","syntax":"swift","code":["let timecode = try Timecode(","    .components(h: 1, m: 0, s: 0, f: 0), ","    at: ._24,","    base: ._80SubFrames,","    limit: ._100Days",")"]},{"anchor":"Set-Timecode-on-Existing-Timecode-Instance","level":2,"type":"heading","text":"Set Timecode on Existing Timecode Instance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Previous "},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" "},{"type":"codeVoice","code":"setTimecode()"},{"type":"text","text":" methods have been refactored to use a more consistent "},{"type":"codeVoice","code":"set()"},{"type":"text","text":" methods, with overloads"},{"type":"text","text":" "},{"type":"text","text":"similar to the new "},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" initializers. This also allows set methods to take nearly any value source and apply any"},{"type":"text","text":" "},{"type":"text","text":"validation rule."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":"swift","code":["var timecode = Timecode(.zero, at: ._24)","try timecode.set(.realTime(seconds: 123.0))","timecode.set(.frames(1234), by: .wrapping)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For value type reference, see the "},{"type":"reference","isActive":true,"identifier":"#Timecode-Time-Value-Types"},{"type":"text","text":" section above."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For timecode validation rules reference, see the "},{"type":"reference","isActive":true,"identifier":"#Timecode-Validation"},{"type":"text","text":" section above."}]},{"anchor":"Functional-Shorthand","level":2,"type":"heading","text":"Functional Shorthand"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The time value category method "},{"type":"codeVoice","code":"toTimecode(...)"},{"type":"text","text":" has been renamed to "},{"type":"codeVoice","code":"timecode(...)"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ 1.x API","try \"01:00:00:00\".toTimecode(at: ._24)","\/\/ 2.x API","try \"01:00:00:00\".timecode(at: ._24)"]},{"anchor":"Enum-Case-Respellings","level":2,"type":"heading","text":"Enum Case Respellings"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some enum cases have been renamed to conform to lowerCamelCase."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/UpperLimit-swift.enum"},{"type":"text","text":" cases have been renamed."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum"},{"type":"text","text":" cases have been renamed."}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/timecodekit\/timecodekit-2-migration-guide"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/TimecodeKit-2-Migration-Guide","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Major API changes from TimecodeKit version 1 to version 2."}],"kind":"article","metadata":{"roleHeading":"Article","title":"TimecodeKit 2 Migration Guide","role":"article","modules":[{"name":"TimecodeKit"}]},"hierarchy":{"paths":[["doc:\/\/TimecodeKit\/documentation\/TimecodeKit"]]},"seeAlsoSections":[{"title":"Getting Started","identifiers":["doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Getting-Started"],"generated":true}],"references":{"doc://TimecodeKit/documentation/TimecodeKit/Timecode/Properties-swift.struct":{"role":"symbol","title":"Timecode.Properties","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Properties"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode"},{"type":"text","text":" properties."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/Properties-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Properties"}],"url":"\/documentation\/timecodekit\/timecode\/properties-swift.struct"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/UpperLimit-swift.enum":{"role":"symbol","title":"Timecode.UpperLimit","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"UpperLimit"}],"abstract":[{"type":"text","text":"Enum describing the maximum timecode ceiling."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/UpperLimit-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UpperLimit"}],"url":"\/documentation\/timecodekit\/timecode\/upperlimit-swift.enum"},"timecode-init.png":{"alt":"Timecode init","type":"image","identifier":"timecode-init.png","variants":[{"url":"\/images\/timecode-init.png","traits":["1x","light"]}]},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/stringValue(format:)":{"role":"symbol","title":"stringValue(format:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stringValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Timecode string representation."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/stringValue(format:)","kind":"symbol","type":"topic","url":"\/documentation\/timecodekit\/timecode\/stringvalue(format:)"},"doc://TimecodeKit/documentation/TimecodeKit/Getting-Started":{"role":"collectionGroup","title":"Getting Started","abstract":[{"type":"text","text":"Documentation and guides to get the most out of TimecodeKit."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/timecodekit\/getting-started"},"#Timecode-Time-Value-Types":{"title":"Timecode Time Value Types","titleInlineContent":[{"type":"text","text":"Timecode Time Value Types"}],"type":"link","identifier":"#Timecode-Time-Value-Types","url":"#Timecode-Time-Value-Types"},"#Timecode-Validation":{"title":"Timecode Validation","titleInlineContent":[{"type":"text","text":"Timecode Validation"}],"type":"link","identifier":"#Timecode-Validation","url":"#Timecode-Validation"},"doc://TimecodeKit/documentation/TimecodeKit":{"role":"collection","title":"TimecodeKit","abstract":[{"type":"text","text":"Value types for representing and working with SMPTE timecode."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit","kind":"symbol","type":"topic","url":"\/documentation\/timecodekit"},"doc://TimecodeKit/documentation/TimecodeKit/TimecodeFrameRate/CompatibleGroup-swift.enum":{"role":"symbol","title":"TimecodeFrameRate.CompatibleGroup","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompatibleGroup"}],"abstract":[{"type":"text","text":"Enum describing compatible groupings of frame rates."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/TimecodeFrameRate\/CompatibleGroup-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CompatibleGroup"}],"url":"\/documentation\/timecodekit\/timecodeframerate\/compatiblegroup-swift.enum"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode":{"role":"symbol","title":"Timecode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timecode"}],"abstract":[{"type":"text","text":"Value type representing SMPTE timecode."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Timecode"}],"url":"\/documentation\/timecodekit\/timecode"}}}