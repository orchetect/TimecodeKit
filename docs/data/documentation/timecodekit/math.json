{"kind":"article","seeAlsoSections":[{"title":"Math & Conversions","generated":true,"identifiers":["doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode-Conversions","doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Rational-Numbers-and-CMTime","doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode-Interval","doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode-Transformer"],"anchor":"Math--Conversions"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Math"},"metadata":{"modules":[{"name":"TimecodeKit"}],"title":"Math","roleHeading":"Article","role":"article"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Math operations are possible by either methods or operators."}]},{"inlineContent":[{"type":"text","text":"Addition and subtraction may be performed using two timecode operands to produce a timecode result."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"text":" + ","type":"text"},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Timecode"},{"text":" - ","type":"text"},{"code":"Timecode","type":"codeVoice"},{"type":"text","text":" = "},{"code":"Timecode","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Multiplication and division may be performed using one timecode operand and one floating-point number operand. This forms a calculation of timecode (position or duration) against a number of iterations or subdivisions."}]},{"type":"paragraph","inlineContent":[{"text":"Multiplying timecode against timecode in order to produce a timecode result is not possible since it is ambiguous and considered undefined behavior.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"Timecode","type":"codeVoice"},{"type":"text","text":" * "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"Timecode","type":"codeVoice"},{"text":" * ","type":"text"},{"code":"Timecode","type":"codeVoice"},{"text":" is undefined and therefore not implemented","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"Timecode","type":"codeVoice"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"Double"},{"text":" = ","type":"text"},{"type":"codeVoice","code":"Timecode"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Timecode"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Double"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Arithmetic-Operators","text":"Arithmetic Operators"},{"inlineContent":[{"type":"text","text":"Arithmetic operators are provided for convenience. These operators employ the "},{"type":"reference","identifier":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode\/ValidationRule\/wrapping","isActive":true},{"text":" validation rule in the event of underflows or overflows.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let tc1 = try \"01:00:00:00\".timecode(at: .fps23_976)","let tc2 = try \"00:02:00:00\".timecode(at: .fps23_976)","","(tc1 + tc2).stringValue() \/\/ == \"01:02:00:00\"","(tc1 - tc2).stringValue() \/\/ == \"00:58:00:00\"","(tc1 * 2.0).stringValue() \/\/ == \"02:00:00:00\"","(tc1 \/ 2.0).stringValue() \/\/ == \"00:30:00:00\"","tc1 \/ tc2 \/\/ == 30.0"],"type":"codeListing"},{"type":"heading","text":"Arithmetic Methods","anchor":"Arithmetic-Methods","level":2},{"inlineContent":[{"type":"text","text":"Arithmetic methods follow the same behavior as "},{"type":"reference","identifier":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode","isActive":true},{"text":" initializers whereby the operation can be completed either using validation with a throwing call, or by using validation rules to constrain the result (See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode\/ValidationRule"},{"text":").","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The right-hand operand may be a ","type":"text"},{"identifier":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode","type":"reference","isActive":true},{"type":"text","text":" instance, or any time source value."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"add()"},{"text":" \/ ","type":"text"},{"code":"adding()","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"subtract()","type":"codeVoice"},{"type":"text","text":" \/ "},{"code":"subtracting()","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"multiply()","type":"codeVoice"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"multiplying()"}]}]},{"content":[{"inlineContent":[{"code":"divide()","type":"codeVoice"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"dividing()"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"codeListing","syntax":"swift","code":["var tc1 = try \"01:00:00:00\".timecode(at: .fps23_976)","var tc2 = try \"00:00:02:00\".timecode(at: .fps23_976)","","\/\/ in-place mutation","try tc1.add(tc2)","try tc1.add(tc2, by: .wrapping) \/\/ using result validation rule","","\/\/ return a new instance","let tc3 = try tc1.adding(tc2)","let tc3 = try tc1.adding(tc2, by: .wrapping) \/\/ using result validation rule"]}],"kind":"content"}],"sections":[],"abstract":[{"text":"Performing mathematical calculations between timecodes.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/timecodekit\/math"]}],"hierarchy":{"paths":[["doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit"]]},"references":{"doc://timecodekit.TimecodeKit/documentation/TimecodeKit/Timecode-Transformer":{"kind":"article","role":"collectionGroup","title":"Timecode Transformer","abstract":[{"type":"text","text":"Using the timecode transformer facility."}],"url":"\/documentation\/timecodekit\/timecode-transformer","type":"topic","identifier":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode-Transformer"},"doc://timecodekit.TimecodeKit/documentation/TimecodeKit/Timecode-Interval":{"type":"topic","kind":"article","abstract":[{"text":"Working with intervals between two timecodes.","type":"text"}],"url":"\/documentation\/timecodekit\/timecode-interval","role":"collectionGroup","identifier":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode-Interval","title":"Timecode Interval"},"doc://timecodekit.TimecodeKit/documentation/TimecodeKit/Timecode/ValidationRule/wrapping":{"role":"symbol","identifier":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode\/ValidationRule\/wrapping","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapping"}],"type":"topic","url":"\/documentation\/timecodekit\/timecode\/validationrule\/wrapping","title":"Timecode.ValidationRule.wrapping","abstract":[{"type":"text","text":"Wrap over or under the valid timecode range if necessary."}]},"doc://timecodekit.TimecodeKit/documentation/TimecodeKit":{"type":"topic","title":"TimecodeKit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Value types for representing and working with SMPTE\/EBU timecode."}],"identifier":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit","url":"\/documentation\/timecodekit"},"doc://timecodekit.TimecodeKit/documentation/TimecodeKit/Timecode/ValidationRule":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode\/ValidationRule","title":"Timecode.ValidationRule","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"ValidationRule","kind":"identifier"}],"url":"\/documentation\/timecodekit\/timecode\/validationrule","navigatorTitle":[{"kind":"identifier","text":"ValidationRule"}],"abstract":[]},"doc://timecodekit.TimecodeKit/documentation/TimecodeKit/Timecode":{"abstract":[{"text":"Value type representing SMPTE\/EBU timecode.","type":"text"}],"type":"topic","identifier":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode","url":"\/documentation\/timecodekit\/timecode","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Timecode","kind":"identifier"}],"title":"Timecode","navigatorTitle":[{"text":"Timecode","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://timecodekit.TimecodeKit/documentation/TimecodeKit/Rational-Numbers-and-CMTime":{"identifier":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Rational-Numbers-and-CMTime","url":"\/documentation\/timecodekit\/rational-numbers-and-cmtime","title":"Rational Numbers & CMTime","kind":"article","abstract":[{"type":"text","text":"Using rational (fractional) time values and "},{"type":"codeVoice","code":"CMTime"},{"type":"text","text":"."}],"type":"topic","role":"collectionGroup"},"doc://timecodekit.TimecodeKit/documentation/TimecodeKit/Timecode-Conversions":{"title":"Conversions","identifier":"doc:\/\/timecodekit.TimecodeKit\/documentation\/TimecodeKit\/Timecode-Conversions","type":"topic","abstract":[{"type":"text","text":"Converting various time values to\/from timecode."}],"role":"article","kind":"article","url":"\/documentation\/timecodekit\/timecode-conversions"}}}