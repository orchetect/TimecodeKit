{"metadata":{"title":"Math","role":"article","roleHeading":"Article","modules":[{"name":"TimecodeKit"}]},"identifier":{"url":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Math","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Math operations are possible by either methods or operators."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Addition and subtraction may be performed using two timecode operands to produce a timecode result."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"Timecode","type":"codeVoice"},{"text":" + ","type":"text"},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Timecode"},{"text":" - ","type":"text"},{"code":"Timecode","type":"codeVoice"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Multiplication and division may be performed using one timecode operand and one floating-point number operand. This forms a calculation of timecode (position or duration) against a number of iterations or subdivisions."}]},{"inlineContent":[{"text":"Multiplying timecode against timecode in order to produce a timecode result is not possible since it is ambiguous and considered undefined behavior.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"Timecode","type":"codeVoice"},{"text":" * ","type":"text"},{"type":"codeVoice","code":"Double"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"Timecode","type":"codeVoice"},{"text":" * ","type":"text"},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" is undefined and therefore not implemented"}]}]},{"content":[{"inlineContent":[{"code":"Timecode","type":"codeVoice"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"Double"},{"type":"text","text":" = "},{"code":"Timecode","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"Timecode","type":"codeVoice"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" = "},{"code":"Double","type":"codeVoice"}]}]}]},{"type":"heading","level":2,"anchor":"Arithmetic-Operators","text":"Arithmetic Operators"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Arithmetic operators are provided for convenience. These operators employ the "},{"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/ValidationRule\/wrapping","isActive":true,"type":"reference"},{"type":"text","text":" validation rule in the event of underflows or overflows."}]},{"type":"codeListing","syntax":"swift","code":["let tc1 = try \"01:00:00:00\".timecode(at: .fps23_976)","let tc2 = try \"00:02:00:00\".timecode(at: .fps23_976)","","(tc1 + tc2).stringValue() \/\/ == \"01:02:00:00\"","(tc1 - tc2).stringValue() \/\/ == \"00:58:00:00\"","(tc1 * 2.0).stringValue() \/\/ == \"02:00:00:00\"","(tc1 \/ 2.0).stringValue() \/\/ == \"00:30:00:00\"","tc1 \/ tc2 \/\/ == 30.0"]},{"anchor":"Arithmetic-Methods","level":2,"text":"Arithmetic Methods","type":"heading"},{"inlineContent":[{"text":"Arithmetic methods follow the same behavior as ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode"},{"text":" initializers whereby the operation can be completed either using validation with a throwing call, or by using validation rules to constrain the result (See ","type":"text"},{"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/ValidationRule","isActive":true,"type":"reference"},{"type":"text","text":")."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The right-hand operand may be a "},{"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode","type":"reference","isActive":true},{"text":" instance, or any time source value.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"add()"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"adding()"}]}]},{"content":[{"inlineContent":[{"code":"subtract()","type":"codeVoice"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"subtracting()"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"multiply()"},{"type":"text","text":" \/ "},{"code":"multiplying()","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"divide()","type":"codeVoice"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"dividing()"}]}]}]},{"code":["var tc1 = try \"01:00:00:00\".timecode(at: .fps23_976)","var tc2 = try \"00:00:02:00\".timecode(at: .fps23_976)","","\/\/ in-place mutation","try tc1.add(tc2)","try tc1.add(tc2, by: wrapping) \/\/ using result validation rule","","\/\/ return a new instance","let tc3 = try tc1.adding(tc2)","let tc3 = try tc1.adding(tc2, by: wrapping) \/\/ using result validation rule"],"syntax":"swift","type":"codeListing"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Conversions","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Rational-Numbers-and-CMTime","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Interval","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Transformer"],"generated":true,"title":"Math & Conversions"}],"variants":[{"paths":["\/documentation\/timecodekit\/math"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/TimecodeKit\/documentation\/TimecodeKit"]]},"kind":"article","sections":[],"abstract":[{"type":"text","text":"Performing mathematical calculations between timecodes."}],"references":{"doc://TimecodeKit/documentation/TimecodeKit/Timecode/ValidationRule/wrapping":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapping","kind":"identifier"}],"abstract":[{"text":"Wrap over or under the valid timecode range if necessary.","type":"text"}],"kind":"symbol","url":"\/documentation\/timecodekit\/timecode\/validationrule\/wrapping","role":"symbol","title":"Timecode.ValidationRule.wrapping","type":"topic","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/ValidationRule\/wrapping"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode-Interval":{"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Interval","url":"\/documentation\/timecodekit\/timecode-interval","kind":"article","type":"topic","title":"Timecode Interval","abstract":[{"type":"text","text":"Working with intervals between two timecodes."}],"role":"collectionGroup"},"doc://TimecodeKit/documentation/TimecodeKit":{"type":"topic","role":"collection","kind":"symbol","title":"TimecodeKit","url":"\/documentation\/timecodekit","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit","abstract":[{"type":"text","text":"Value types for representing and working with SMPTE\/EBU timecode."}]},"doc://TimecodeKit/documentation/TimecodeKit/Rational-Numbers-and-CMTime":{"kind":"article","title":"Rational Numbers & CMTime","type":"topic","role":"collectionGroup","url":"\/documentation\/timecodekit\/rational-numbers-and-cmtime","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Rational-Numbers-and-CMTime","abstract":[{"type":"text","text":"Using rational (fractional) time values and "},{"type":"codeVoice","code":"CMTime"},{"type":"text","text":"."}]},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/ValidationRule":{"url":"\/documentation\/timecodekit\/timecode\/validationrule","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ValidationRule"}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/ValidationRule","title":"Timecode.ValidationRule","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"ValidationRule","kind":"identifier"}],"abstract":[]},"doc://TimecodeKit/documentation/TimecodeKit/Timecode-Conversions":{"role":"article","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Conversions","abstract":[{"type":"text","text":"Converting various time values to\/from timecode."}],"kind":"article","type":"topic","title":"Conversions","url":"\/documentation\/timecodekit\/timecode-conversions"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Timecode"}],"navigatorTitle":[{"text":"Timecode","kind":"identifier"}],"kind":"symbol","title":"Timecode","url":"\/documentation\/timecodekit\/timecode","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode","abstract":[{"type":"text","text":"Value type representing SMPTE\/EBU timecode."}]},"doc://TimecodeKit/documentation/TimecodeKit/Timecode-Transformer":{"abstract":[{"type":"text","text":"Using the timecode transformer facility."}],"type":"topic","role":"collectionGroup","title":"Timecode Transformer","kind":"article","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Transformer","url":"\/documentation\/timecodekit\/timecode-transformer"}}}