{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Math operations are possible by either methods or operators."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Addition and subtraction may be performed using two timecode operands to produce a timecode result."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" + "},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" - "},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Multiplication and division may be performed using one timecode operand and one floating-point number operand. This forms a calculation of timecode (position or duration) against a number of iterations or subdivisions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Multiplying timecode against timecode in order to produce a timecode result is not possible since it is ambiguous and considered undefined behavior."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" * "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" * "},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" is undefined and therefore not implemented"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Timecode"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"Timecode"},{"type":"text","text":" = "},{"type":"codeVoice","code":"Double"}]}]}]},{"anchor":"Arithmetic-Methods","level":2,"type":"heading","text":"Arithmetic Methods"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Arithmetic methods follow the same behavior as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode"},{"type":"text","text":" initializers whereby the operation can be completed either using validation with a throwing call, or by using validation rules to constrain the result (See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/ValidationRule"},{"type":"text","text":")."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The right-hand operand may be a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode"},{"type":"text","text":" instance, or any time source value."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"add()"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"adding()"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"subtract()"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"subtracting()"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"multiply()"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"multiplying()"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"divide()"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"dividing()"}]}]}]},{"type":"codeListing","syntax":"swift","code":["var tc1 = try \"01:00:00:00\".timecode(at: ._23_976)","var tc2 = try \"00:00:02:00\".timecode(at: ._23_976)","","\/\/ in-place mutation","try tc1.add(tc2)","try tc1.add(tc2, by: wrapping) \/\/ using result validation rule","","\/\/ return a new instance","let tc3 = try tc1.adding(tc2)","let tc3 = try tc1.adding(tc2, by: wrapping) \/\/ using result validation rule"]},{"anchor":"Arithmetic-Operators","level":2,"type":"heading","text":"Arithmetic Operators"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Arithmetic operators are provided for convenience. These operators employ the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/ValidationRule\/wrapping"},{"type":"text","text":" validation rule in the event of underflows or overflows."}]},{"type":"codeListing","syntax":"swift","code":["let tc1 = try \"01:00:00:00\".timecode(at: ._23_976)","let tc2 = try \"00:02:00:00\".timecode(at: ._23_976)","","(tc1 + tc2).stringValue() \/\/ == \"01:02:00:00\"","(tc1 - tc2).stringValue() \/\/ == \"00:58:00:00\"","(tc1 * 2.0).stringValue() \/\/ == \"02:00:00:00\"","(tc1 \/ 2.0).stringValue() \/\/ == \"00:30:00:00\"","tc1 \/ tc2 \/\/ == 30.0"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/timecodekit\/math"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Math","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Performing mathematical calculations between timecodes."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Math","role":"article","modules":[{"name":"TimecodeKit"}]},"hierarchy":{"paths":[["doc:\/\/TimecodeKit\/documentation\/TimecodeKit","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Getting-Started"]]},"seeAlsoSections":[{"title":"Math & Conversions","identifiers":["doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Conversions","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Rational-Numbers-and-CMTime","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Intervals","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Transformer"],"generated":true}],"references":{"doc://TimecodeKit/documentation/TimecodeKit":{"role":"collection","title":"TimecodeKit","abstract":[{"type":"text","text":"Value types for representing and working with SMPTE timecode."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit","kind":"symbol","type":"topic","url":"\/documentation\/timecodekit"},"doc://TimecodeKit/documentation/TimecodeKit/Getting-Started":{"role":"collectionGroup","title":"Getting Started","abstract":[{"type":"text","text":"Documentation and guides to get the most out of TimecodeKit."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/timecodekit\/getting-started"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode":{"role":"symbol","title":"Timecode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timecode"}],"abstract":[{"type":"text","text":"Value type representing SMPTE timecode."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Timecode"}],"url":"\/documentation\/timecodekit\/timecode"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode-Transformer":{"role":"article","title":"Timecode Transformer","abstract":[{"type":"text","text":"Using the timecode transformer facility."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Transformer","kind":"article","type":"topic","url":"\/documentation\/timecodekit\/timecode-transformer"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/ValidationRule/wrapping":{"role":"symbol","title":"Timecode.ValidationRule.wrapping","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapping"}],"abstract":[{"type":"text","text":"Wrap over or under the valid timecode range if necessary."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/ValidationRule\/wrapping","kind":"symbol","type":"topic","url":"\/documentation\/timecodekit\/timecode\/validationrule\/wrapping"},"doc://TimecodeKit/documentation/TimecodeKit/Rational-Numbers-and-CMTime":{"role":"article","title":"Rational Numbers & CMTime","abstract":[{"type":"text","text":"Using rational (fractional) time values and "},{"type":"codeVoice","code":"CMTime"},{"type":"text","text":"."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Rational-Numbers-and-CMTime","kind":"article","type":"topic","url":"\/documentation\/timecodekit\/rational-numbers-and-cmtime"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/ValidationRule":{"role":"symbol","title":"Timecode.ValidationRule","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidationRule"}],"abstract":[],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/ValidationRule","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValidationRule"}],"url":"\/documentation\/timecodekit\/timecode\/validationrule"},"doc://TimecodeKit/documentation/TimecodeKit/Conversions":{"role":"article","title":"Conversions","abstract":[{"type":"text","text":"Converting various time values to\/from timecode."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Conversions","kind":"article","type":"topic","url":"\/documentation\/timecodekit\/conversions"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode-Intervals":{"role":"article","title":"Timecode Intervals","abstract":[{"type":"text","text":"Working with intervals between two timecodes."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Intervals","kind":"article","type":"topic","url":"\/documentation\/timecodekit\/timecode-intervals"}}}