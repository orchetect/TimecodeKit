{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Read-Timecode-from-QuickTime-Movie","level":2,"type":"heading","text":"Read Timecode from QuickTime Movie"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Simple methods to read start timecode and duration from "},{"type":"codeVoice","code":"AVAsset"},{"type":"text","text":" and its subclasses ("},{"type":"codeVoice","code":"AVMovie"},{"type":"text","text":") as well as "},{"type":"codeVoice","code":"AVAssetTrack"},{"type":"text","text":" are provided by TimecodeKit. The methods are throwing since timecode information is not guaranteed to be present inside movie files."}]},{"type":"codeListing","syntax":"swift","code":["let asset = AVAsset( ... )","","\/\/ auto-detect frame rate if it's embedded in the file","let frameRate = try asset.timecodeFrameRate() \/\/ ie: ._29_97","","\/\/ read start timecode, auto-detecting frame rate","let startTimecode = try asset.startTimecode()","\/\/ read start timecode, forcing a known frame rate","let startTimecode = try asset.startTimecode(at: ._29_97)","","\/\/ read video duration expressed as timecode","let durationTimecode = try asset.durationTimecode()","\/\/ read video duration expressed as timecode, forcing a known frame rate","let durationTimecode = try asset.durationTimecode(at: ._29_97)","","\/\/ read end timecode, auto-detecting frame rate","let endTimecode = try asset.endTimecode()","\/\/ read end timecode, forcing a known frame rate","let endTimecode = try asset.endTimecode(at: ._29_97)"]},{"anchor":"Add-or-Replace-Timecode-Track-in-a-QuickTime-Movie","level":2,"type":"heading","text":"Add or Replace Timecode Track in a QuickTime Movie"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Currently timecode tracks can be modified on "},{"type":"codeVoice","code":"AVMutableMovie"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is one way to make an "},{"type":"codeVoice","code":"AVMovie"},{"type":"text","text":" into a mutable "},{"type":"codeVoice","code":"AVMutableMovie"},{"type":"text","text":" if needed."}]},{"type":"codeListing","syntax":"swift","code":["let movie = AVMovie( ... )","guard let mutableMovie = movie.mutableCopy() as? AVMutableMovie else { ... }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then add\/replace the timecode track."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ replace existing timecode track if it exists, otherwise add a new timecode track","try mutableMovie.replaceTimecodeTrack(","    startTimecode: Timecode(.components(h: 0, m: 59, s: 58, f: 00), at: ._29_97),","    fileType: .mov",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, the new file can be saved back to disk using "},{"type":"codeVoice","code":"AVAssetExportSession"},{"type":"text","text":". There are other ways of course but this is the vanilla method."}]},{"type":"codeListing","syntax":"swift","code":["let export = AVAssetExportSession(","    asset: mutableMovie,","    presetName: AVAssetExportPresetPassthrough",")","export.outputFileType = .mov","export.outputURL = \/\/ new file URL on disk","export.exportAsynchronously {","    \/\/ completion handler","}"]},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As of iOS 17, Apple appears to have introduced a regression when using "},{"type":"codeVoice","code":"AVAssetExportSession"},{"type":"text","text":" to save a QuickTime movie file when using a physical iOS device (simulator works fine). A radar has been filed with Apple (FB12986599). This is not an issue with TimecodeKit itself. However, until Apple fixes this bug it will affect saving a movie file after performing timecode track modifications. See "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/orchetect\/TimecodeKit\/discussions\/63"},{"type":"text","text":" for details."}]}],"type":"aside","name":"Warning"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/timecodekit\/avasset-timecode-track"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/AVAsset-Timecode-Track","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Manipulating timecode track(s) for movie assets in AVFoundation."}],"kind":"article","metadata":{"roleHeading":"Article","title":"AVAsset Timecode Track Read\/Write","role":"article","modules":[{"name":"TimecodeKit"}]},"hierarchy":{"paths":[["doc:\/\/TimecodeKit\/documentation\/TimecodeKit","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Getting-Started"]]},"references":{"doc://TimecodeKit/documentation/TimecodeKit":{"role":"collection","title":"TimecodeKit","abstract":[{"type":"text","text":"Value types for representing and working with SMPTE timecode."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit","kind":"symbol","type":"topic","url":"\/documentation\/timecodekit"},"doc://TimecodeKit/documentation/TimecodeKit/Getting-Started":{"role":"collectionGroup","title":"Getting Started","abstract":[{"type":"text","text":"Documentation and guides to get the most out of TimecodeKit."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/timecodekit\/getting-started"},"https://github.com/orchetect/TimecodeKit/discussions/63":{"title":"this thread","titleInlineContent":[{"type":"text","text":"this thread"}],"type":"link","identifier":"https:\/\/github.com\/orchetect\/TimecodeKit\/discussions\/63","url":"https:\/\/github.com\/orchetect\/TimecodeKit\/discussions\/63"}}}