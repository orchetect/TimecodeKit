{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TimecodeKit is designed to work with Xcodeâ€™s autocomplete fluidly. Beginning a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode"},{"type":"text","text":" initializer with a period will produce a list of all available source time value types."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"timecode-init.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Timecode can be formed by providing discrete values."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ zero timecode (00:00:00:00)",".zero","","\/\/ timecode component values",".components(h: 01, m: 00, s: 00, f: 00)",".components(d: 00, h: 01, m: 00, s: 00, f: 00, sf: 00) \/\/ days and subframes allowed",".components(Timecode.Components(h: 1)) \/\/ also accepts struct instance"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Timecode can be formed by converting from a variety of common time values."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ frame number (total elapsed frames)",".frames(10000) \/\/ whole frames",".frames(10000, subFrames: 20) \/\/ whole frames + subframes",".frames(10000.25) \/\/ (Double) whole frames + float subframes",".frames(10000, subFramesUnitInterval: 0.25) \/\/ whole frames + float subframes",".frames(Timecode.FrameCount(...)) \/\/ also accepts struct instance","","\/\/ timecode string",".string(\"01:00:00:00\")",".string(\"2 01:00:00:00.00\") \/\/ days and subframes allowed","","\/\/ real time (wall clock) elapsed in seconds",".realTime(seconds: 4723.241579)","","\/\/ elapsed audio samples at a given sample rate in Hz",".samples(123456789, sampleRate: 48000)","","\/\/ AVFoundation AVAsset: read .start, .end or .duration timecode of a movie",".avAsset(AVAsset(...), .start)","","\/\/ AVFoundation CMTime",".cmTime(CMTime(value: 1920919, timescale: 30000))","","\/\/ rational time fraction (ie: Final Cut Pro XML, or AAF)",".rational(1920919, 30000)",".rational(Fraction(1920919, 30000)) \/\/ also accepts struct instance","","\/\/ legacy Feet+Frames designation",".feetAndFrames(feet: 60, frames: 10)",".feetAndFrames(FeetAndFrames(feet: 60, frames: 10)) \/\/ also accepts struct instance"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The frame rate must also be supplied. This can be done easily with the "},{"type":"codeVoice","code":"at:"},{"type":"text","text":" overload."}]},{"type":"codeListing","syntax":"swift","code":["let tc = try Timecode(.string(\"01:00:00:00\"), at: ._23_976)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If additional properties need to be specified, supply a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/Properties-swift.struct"},{"type":"text","text":" struct with the "},{"type":"codeVoice","code":"using:"},{"type":"text","text":" overload."}]},{"type":"codeListing","syntax":"swift","code":["let tcProperties = Timecode.Properties(","    rate: ._23_976,","    base: ._100SubFrames,","    limit: ._100Days",")","let tc = try Timecode(.string(\"01:00:00:00\"), using: tcProperties)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is possible to clamp to valid timecode using a non-throwing init."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ clamp full timecode to valid range","Timecode(.components(h: 26, m: 00, s: 00, f: 00), at: ._24, by: .clamping)","    .stringValue() \/\/ == \"23:59:59:23\"","","\/\/ clamp individual timecode component values to valid values if they are out-of-bounds","Timecode(.components(h: 01, m: 00, s: 85, f: 50), at: ._24, by: .clampingEach)","    .stringValue() \/\/ == \"01:00:59:23\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is also possible to wrap to valid timecode using a non-throwing init."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ wrap around clock continuously if entire timecode overflows or underflows","","Timecode(.components(h: 26, m: 00, s: 00, f: 00), at: ._24, by: .wrapping)","    .stringValue() \/\/ == \"02:00:00:00\"","","Timecode(.components(h: 23, m: 59, s: 59, f: 24), at: ._24, by: .wrapping)","    .stringValue() \/\/ == \"00:00:00:00\""]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/timecodekit\/initialization"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Initialization","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Basic initialization of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode"},{"type":"text","text":" struct."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Initialization","role":"article","modules":[{"name":"TimecodeKit"}]},"hierarchy":{"paths":[["doc:\/\/TimecodeKit\/documentation\/TimecodeKit","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Getting-Started"]]},"seeAlsoSections":[{"title":"Basics","identifiers":["doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Properties","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Components","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Display-String","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Validation"],"generated":true}],"references":{"doc://TimecodeKit/documentation/TimecodeKit/Validation":{"role":"article","title":"Validation","abstract":[{"type":"text","text":"Timecode valdation."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Validation","kind":"article","type":"topic","url":"\/documentation\/timecodekit\/validation"},"timecode-init.png":{"alt":"Timecode init","type":"image","identifier":"timecode-init.png","variants":[{"url":"\/images\/timecode-init.png","traits":["1x","light"]}]},"doc://TimecodeKit/documentation/TimecodeKit/Getting-Started":{"role":"collectionGroup","title":"Getting Started","abstract":[{"type":"text","text":"Documentation and guides to get the most out of TimecodeKit."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/timecodekit\/getting-started"},"doc://TimecodeKit/documentation/TimecodeKit/Components":{"role":"article","title":"Components","abstract":[{"type":"text","text":"Defining and using timecode components."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Components","kind":"article","type":"topic","url":"\/documentation\/timecodekit\/components"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/Properties-swift.struct":{"role":"symbol","title":"Timecode.Properties","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Properties"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode"},{"type":"text","text":" properties."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/Properties-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Properties"}],"url":"\/documentation\/timecodekit\/timecode\/properties-swift.struct"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode":{"role":"symbol","title":"Timecode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timecode"}],"abstract":[{"type":"text","text":"Value type representing SMPTE timecode."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Timecode"}],"url":"\/documentation\/timecodekit\/timecode"},"doc://TimecodeKit/documentation/TimecodeKit/Properties":{"role":"article","title":"Properties","abstract":[{"type":"text","text":"Defining and using timecode properties."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Properties","kind":"article","type":"topic","url":"\/documentation\/timecodekit\/properties"},"doc://TimecodeKit/documentation/TimecodeKit/Display-String":{"role":"article","title":"Display String","abstract":[{"type":"text","text":"Working with timecode strings for GUI display or data output."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Display-String","kind":"article","type":"topic","url":"\/documentation\/timecodekit\/display-string"},"doc://TimecodeKit/documentation/TimecodeKit":{"role":"collection","title":"TimecodeKit","abstract":[{"type":"text","text":"Value types for representing and working with SMPTE timecode."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit","kind":"symbol","type":"topic","url":"\/documentation\/timecodekit"}}}