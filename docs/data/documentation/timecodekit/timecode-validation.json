{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Validation"},"topicSections":[{"title":"Invalid Components","identifiers":["doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/invalidComponents","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/invalidComponents(in:at:base:limit:)","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/invalidComponents(in:using:)"]},{"identifiers":["doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/stringValueValidated(format:invalidAttributes:defaultAttributes:)"],"title":"Formatted Attributed String"},{"title":"Formatter","identifiers":["doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/TextFormatter"]}],"primaryContentSections":[{"content":[{"text":"Timecode Component Validation","type":"heading","level":2,"anchor":"Timecode-Component-Validation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Timecode validation can be helpful and powerful, for example, when parsing timecode strings read from an external data file or received as user-input in a text field."}]},{"inlineContent":[{"text":"Timecode can be tested as:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"valid or invalid as a whole, by catching a throwing error when using the default throwing initializers or ","type":"text"},{"code":"set()","type":"codeVoice"},{"type":"text","text":" methods, or"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"granularly to test validity of individual timecode components","type":"text"}]}]}],"type":"unorderedList"},{"syntax":"swift","type":"codeListing","code":["\/\/ example:","\/\/ 1 hour and 20 minutes ARE valid at 23.976 fps,","\/\/ but 75 seconds and 60 frames are NOT valid","","\/\/ non-granular validation","try Timecode(.components(h: 1, m: 20, s: 75, f: 60), at: .fps23_976)","\/\/ == throws error; cannot form a valid timecode","","\/\/ granular validation","\/\/ allowingInvalid allows invalid values; does not throw errors so 'try' is not needed","Timecode(.components(h: 1, m: 20, s: 75, f: 60), at: .fps23_976, by: .allowingInvalid)","    .invalidComponents \/\/ == [.seconds, .frames]"]},{"type":"heading","anchor":"Formatted-NSAttributedString","text":"Formatted NSAttributedString","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method can produce an "},{"type":"codeVoice","code":"NSAttributedString"},{"type":"text","text":" highlighting individual invalid timecode components with a specified set of attributes."}]},{"code":["Timecode(.components(h: 1, m: 20, s: 75, f: 60), at: .fps23_976, by: .allowingInvalid)","    .stringValueValidated()"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The invalid formatting attributes defaults to applying ","type":"text"},{"code":"[.foregroundColor: NSColor.red]","type":"codeVoice"},{"type":"text","text":" to invalid components. You can alternatively supply your own invalid attributes by setting the "},{"code":"invalidAttributes","type":"codeVoice"},{"type":"text","text":" argument."}]},{"type":"paragraph","inlineContent":[{"text":"You can also supply a set of default attributes to set as the baseline attributes for the entire string.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ set text's background color to red instead of its foreground color","let invalidAttr: [NSAttributedString.Key: Any] = [","    .backgroundColor: NSColor.red","]","","\/\/ set custom font and font size for the entire string","let defaultAttr: [NSAttributedString.Key: Any] = [","    .font: NSFont.systemFont(ofSize: 16)","]","","Timecode(.components(h: 1, m: 20, s: 75, f: 60), at: .fps23_976, by: .allowingInvalid)","    .stringValueValidated(invalidAttributes: invalidAttr,","                          defaultAttributes: defaultAttr)"]},{"text":"NSFormatter","level":2,"type":"heading","anchor":"NSFormatter"},{"type":"paragraph","inlineContent":[{"text":"A special string ","type":"text"},{"code":"Formatter","type":"codeVoice"},{"text":" (","type":"text"},{"type":"codeVoice","code":"NSFormatter"},{"type":"text","text":") subclass can"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"process user-entered timecode strings and format them in realtime in a TextField"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"optionally highlight individual invalid timecode components with a specified set of attributes (defaults to red foreground color)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The invalid formatting attributes defaults to applying "},{"type":"codeVoice","code":"[.foregroundColor: NSColor.red]"},{"type":"text","text":" to invalid components. You can alternatively supply your own invalid attributes by setting the "},{"type":"codeVoice","code":"validationAttributes"},{"type":"text","text":" property on the formatter."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ set up formatter","let formatter = Timecode.TextFormatter(","    using: .init(","        rate: .fps23_976,","        base: .max80SubFrames,","        limit: .max24Hours","    )","    stringFormat: [.showSubFrames],","    showsValidation: true,    \/\/ enable invalid component highlighting","    validationAttributes: nil \/\/ if nil, defaults to red foreground color",")","","\/\/ assign formatter to a TextField UI object, for example","let textField = NSTextField()","textField.formatter = formatter"]},{"level":2,"type":"heading","text":"Formatted SwiftUI Text","anchor":"Formatted-SwiftUI-Text"},{"type":"paragraph","inlineContent":[{"text":"When importing ","type":"text"},{"code":"TimecodeKitUI","type":"codeVoice"},{"text":", a SwiftUI ","type":"text"},{"code":"Text","type":"codeVoice"},{"type":"text","text":" view is available which highlights individual invalid timecode components with a specified set of modifiers."}]},{"inlineContent":[{"type":"text","text":"The invalid formatting attributes defaults to applying "},{"code":".foregroundColor(Color.red)","type":"codeVoice"},{"type":"text","text":" to invalid components."}],"type":"paragraph"},{"syntax":"swift","code":["Timecode(.components(h: 1, m: 20, s: 75, f: 60), at: .fps23_976, by: .allowingInvalid)","    .stringValueValidatedText()"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can alternatively supply your own invalid modifiers by setting the "},{"code":"invalidModifiers","type":"codeVoice"},{"text":" argument.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import TimecodeKitUI","","Timecode(.components(h: 1, m: 20, s: 75, f: 60), at: .fps23_976, by: .allowingInvalid)","    .stringValueValidatedText(","        invalidModifiers: {","            $0.foregroundColor(.blue)","        }, defaultModifiers: {","            $0.foregroundColor(.black)","        }","    )"]}],"kind":"content"}],"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/Properties-swift.struct","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/Components-swift.struct","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-String","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Comparison-and-Sort","doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Range-and-Strideable"],"title":"Timecode"}],"metadata":{"roleHeading":"API Collection","modules":[{"name":"TimecodeKit"}],"title":"Validation","role":"collectionGroup"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","abstract":[{"type":"text","text":"Timecode validation based on frame rate and upper limit."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/timecodekit\/timecode-validation"]}],"hierarchy":{"paths":[["doc:\/\/TimecodeKit\/documentation\/TimecodeKit"]]},"references":{"doc://TimecodeKit/documentation/TimecodeKit/Timecode/invalidComponents(in:at:base:limit:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"invalidComponents"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV","text":"Components"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11TimecodeKit0A9FrameRateO","text":"TimecodeFrameRate","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"base"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11TimecodeKit0A0V","kind":"typeIdentifier","text":"Timecode"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11TimecodeKit0A0V13SubFramesBaseO","text":"SubFramesBase","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"limit","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timecode","preciseIdentifier":"s:11TimecodeKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UpperLimit","preciseIdentifier":"s:11TimecodeKit0A0V10UpperLimitO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"text":"<","kind":"text"},{"text":"Component","kind":"typeIdentifier","preciseIdentifier":"s:11TimecodeKit0A0V9ComponentO"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"text":"Returns a set of invalid components, if any.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"A fully valid timecode will return an empty set."}],"url":"\/documentation\/timecodekit\/timecode\/invalidcomponents(in:at:base:limit:)","title":"invalidComponents(in:at:base:limit:)","type":"topic","role":"symbol","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/invalidComponents(in:at:base:limit:)"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/TextFormatter":{"url":"\/documentation\/timecodekit\/timecode\/textformatter","type":"topic","title":"Timecode.TextFormatter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextFormatter"}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/TextFormatter","navigatorTitle":[{"text":"TextFormatter","kind":"identifier"}],"kind":"symbol","abstract":[{"code":"Formatter","type":"codeVoice"},{"type":"text","text":" subclass. ("},{"type":"codeVoice","code":"@objC"},{"text":" name ","type":"text"},{"type":"codeVoice","code":"TimecodeTextFormatter"},{"type":"text","text":")"},{"type":"text","text":" "},{"code":"Timecode","type":"codeVoice"},{"text":" string formatter capable of displaying invalid timecode components with special formatting.","type":"text"}],"role":"symbol"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/Components-swift.struct":{"role":"symbol","navigatorTitle":[{"text":"Components","kind":"identifier"}],"abstract":[{"type":"text","text":"Primitive struct describing timecode values, agnostic of frame rate."}],"type":"topic","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/Components-swift.struct","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Components","kind":"identifier"}],"url":"\/documentation\/timecodekit\/timecode\/components-swift.struct","title":"Timecode.Components"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/stringValue(format:)":{"title":"stringValue(format:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"stringValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StringFormat","kind":"typeIdentifier","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"url":"\/documentation\/timecodekit\/timecode\/stringvalue(format:)","kind":"symbol","abstract":[{"type":"text","text":"Timecode string representation."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/stringValue(format:)","type":"topic","role":"symbol"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/stringValueValidated(format:invalidAttributes:defaultAttributes:)":{"kind":"symbol","url":"\/documentation\/timecodekit\/timecode\/stringvaluevalidated(format:invalidattributes:defaultattributes:)","title":"stringValueValidated(format:invalidAttributes:defaultAttributes:)","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/stringValueValidated(format:invalidAttributes:defaultAttributes:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stringValueValidated"},{"kind":"text","text":"("},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"text":"StringFormat","preciseIdentifier":"s:11TimecodeKit0A0V12StringFormata","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"invalidAttributes"},{"text":": [","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSAttributedString","kind":"typeIdentifier","text":"NSAttributedString"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Key","preciseIdentifier":"c:@T@NSAttributedStringKey"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"]?, ","kind":"text"},{"text":"defaultAttributes","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"NSAttributedString","preciseIdentifier":"c:objc(cs)NSAttributedString"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSAttributedStringKey","text":"Key"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"]?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"NSAttributedString","preciseIdentifier":"c:objc(cs)NSAttributedString"}],"type":"topic","abstract":[{"type":"text","text":"Returns "},{"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/stringValue(format:)","type":"reference","isActive":true},{"type":"text","text":" as "},{"type":"codeVoice","code":"NSAttributedString"},{"text":", highlighting","type":"text"},{"type":"text","text":" "},{"type":"text","text":"invalid values."}]},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/invalidComponents":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"invalidComponents"},{"kind":"text","text":": "},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11TimecodeKit0A0V9ComponentO","text":"Component","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","abstract":[{"text":"Returns a set of invalid components, if any.","type":"text"},{"text":" ","type":"text"},{"text":"A fully valid timecode will return an empty set.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Validation relies on "},{"type":"codeVoice","code":"frameRate"},{"type":"text","text":" and "},{"type":"codeVoice","code":"upperLimit"},{"text":".","type":"text"}],"url":"\/documentation\/timecodekit\/timecode\/invalidcomponents","type":"topic","title":"invalidComponents","role":"symbol","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/invalidComponents"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/invalidComponents(in:using:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"invalidComponents"},{"kind":"text","text":"("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Components","preciseIdentifier":"s:11TimecodeKit0A0V10ComponentsV"},{"kind":"text","text":", "},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11TimecodeKit0A0V","text":"Timecode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11TimecodeKit0A0V10PropertiesV","kind":"typeIdentifier","text":"Properties"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11TimecodeKit0A0V9ComponentO","text":"Component","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a set of invalid components, if any."},{"type":"text","text":" "},{"text":"A fully valid timecode will return an empty set.","type":"text"}],"url":"\/documentation\/timecodekit\/timecode\/invalidcomponents(in:using:)","type":"topic","title":"invalidComponents(in:using:)","role":"symbol","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/invalidComponents(in:using:)"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode-Range-and-Strideable":{"kind":"article","type":"topic","title":"Range & Strideable","abstract":[{"type":"text","text":"Forming a "},{"type":"codeVoice","code":"Range"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"Stride"},{"text":" between two ","type":"text"},{"type":"reference","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode","isActive":true},{"text":" instances.","type":"text"}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Range-and-Strideable","url":"\/documentation\/timecodekit\/timecode-range-and-strideable","role":"collectionGroup"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode":{"url":"\/documentation\/timecodekit\/timecode","title":"Timecode","abstract":[{"text":"Value type representing SMPTE\/EBU timecode.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Timecode"}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Timecode"}],"type":"topic"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode-String":{"title":"Display String","type":"topic","role":"collectionGroup","kind":"article","abstract":[{"text":"Working with timecode strings for GUI display or data output.","type":"text"}],"url":"\/documentation\/timecodekit\/timecode-string","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-String"},"doc://TimecodeKit/documentation/TimecodeKit":{"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit","type":"topic","abstract":[{"type":"text","text":"Value types for representing and working with SMPTE\/EBU timecode."}],"title":"TimecodeKit","url":"\/documentation\/timecodekit","kind":"symbol","role":"collection"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode-Comparison-and-Sort":{"kind":"article","type":"topic","title":"Comparison & Sort","abstract":[{"type":"text","text":"Comparing and sorting the ordering of timecodes."}],"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode-Comparison-and-Sort","url":"\/documentation\/timecodekit\/timecode-comparison-and-sort","role":"collectionGroup"},"doc://TimecodeKit/documentation/TimecodeKit/Timecode/Properties-swift.struct":{"identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode\/Properties-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Properties","kind":"identifier"}],"url":"\/documentation\/timecodekit\/timecode\/properties-swift.struct","type":"topic","abstract":[{"type":"reference","identifier":"doc:\/\/TimecodeKit\/documentation\/TimecodeKit\/Timecode","isActive":true},{"type":"text","text":" properties."}],"kind":"symbol","role":"symbol","title":"Timecode.Properties","navigatorTitle":[{"text":"Properties","kind":"identifier"}]}}}